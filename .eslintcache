[{"C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\App.js":"2","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Login.js":"3","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\PrivateRoutes.js":"4","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Header.js":"5","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Profile.js":"6","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Not_Found.js":"7","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Signup.js":"8","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Explore.js":"9","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Post.js":"10","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Home.js":"11","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Footer.js":"12","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\Context\\Firebase\\FireState.js":"13","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\Context\\Firebase\\FirebaseContext.js":"14","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Loader.js":"15","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Posts.js":"16","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Saved.js":"17","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\FeedPost.js":"18","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\Context\\Firebase\\FireReducer.js":"19","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\firebase\\config.js":"20"},{"size":507,"mtime":1704715450101,"results":"21","hashOfConfig":"22"},{"size":1583,"mtime":1704709119124,"results":"23","hashOfConfig":"22"},{"size":5814,"mtime":1704709119288,"results":"24","hashOfConfig":"22"},{"size":593,"mtime":1704709119328,"results":"25","hashOfConfig":"22"},{"size":7107,"mtime":1704709119254,"results":"26","hashOfConfig":"22"},{"size":22474,"mtime":1704709119340,"results":"27","hashOfConfig":"22"},{"size":220,"mtime":1704709119296,"results":"28","hashOfConfig":"22"},{"size":7997,"mtime":1704709119362,"results":"29","hashOfConfig":"22"},{"size":2955,"mtime":1704709119222,"results":"30","hashOfConfig":"22"},{"size":16632,"mtime":1704709119307,"results":"31","hashOfConfig":"22"},{"size":9422,"mtime":1704709119264,"results":"32","hashOfConfig":"22"},{"size":359,"mtime":1704709119242,"results":"33","hashOfConfig":"22"},{"size":6626,"mtime":1704709119192,"results":"34","hashOfConfig":"22"},{"size":118,"mtime":1704709119202,"results":"35","hashOfConfig":"22"},{"size":380,"mtime":1704709119275,"results":"36","hashOfConfig":"22"},{"size":4148,"mtime":1704709119317,"results":"37","hashOfConfig":"22"},{"size":2789,"mtime":1704709119350,"results":"38","hashOfConfig":"22"},{"size":15667,"mtime":1704709119232,"results":"39","hashOfConfig":"22"},{"size":1038,"mtime":1704709119180,"results":"40","hashOfConfig":"22"},{"size":1339,"mtime":1704715988196,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1df1z3y",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":1,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"44"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"44"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\index.js",[],["98","99"],"C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\App.js",["100"],"import \"./App.css\";\nimport \"./mobile.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Signup from \"./components/Signup\";\nimport FireState from \"./Context/Firebase/FireState\";\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\nimport Login from \"./components/Login\";\nimport Profile from \"./components/Profile\";\nimport PrivateRoute from \"./components/PrivateRoutes\";\nimport Header from \"./components/Header\";\nimport Explore from \"./components/Explore\";\nimport Home from \"./components/Home\";\nimport Not_Found from \"./components/Not_Found\";\nimport Footer from \"./components/Footer\";\nimport Post from \"./components/Post\";\nrequire(\"dotenv\").config();\n\nconst DefaultContainer = () => (\n  <div className=\"container\">\n    <Header />\n    <PrivateRoute exact path=\"/\" component={Home} />\n    <PrivateRoute exact path=\"/posts/:postId\" component={Post} />\n    <PrivateRoute exact path=\"/explore/posts\" component={Explore} />\n    <PrivateRoute exact path=\"/:userName\" component={Profile} />\n    <PrivateRoute exact path=\"/image/not_found\" component={Not_Found} />\n  </div>\n);\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <ToastProvider>\n          <FireState>\n            <Switch>\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route component={DefaultContainer} />\n            </Switch>\n            <Footer />\n          </FireState>\n        </ToastProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Login.js",["101","102","103","104","105","106","107","108","109","110","111","112"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport {\n  UserOutlined,\n  LockOutlined,\n  MailOutlined,\n  FacebookFilled,\n} from \"@ant-design/icons\";\nimport InstaImage from \"../images/insta_image.png\";\nimport Illustation from \"../images/login_illus.jpg\";\nimport \"antd/dist/antd.css\";\nimport { auth } from \"../firebase/config\";\nimport firebase from \"firebase/app\";\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"./Loader\";\n\nconst Login = (props) => {\n  const [form] = Form.useForm();\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState({});\n  const {\n    user,\n    login,\n    facebookSignup,\n    error,\n    loading: newLoading,\n  } = useContext(FirebaseContext);\n\n  const onFinish = async (values) => {\n    if (!loading?.help2?.length && !loading?.help1?.length) await login(values);\n  };\n  useEffect(() => {\n    if (error) addToast(error, { appearance: \"error\", autoDismiss: true });\n  }, [error]);\n\n  useEffect(() => {\n    if (user) props.history.push(`/${user.userName}`);\n  }, [user]);\n\n  const checkEmail = (e) => {\n    setLoading({ ...loading, status2: \"validating\" });\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .where(\"email\", \"==\", e.target.value)\n      .limit(1)\n      .get()\n      .then((data) => {\n        if (!data.docs.length) {\n          setLoading({\n            ...loading,\n            status2: \"error\",\n            help2: \"This account is not registered\",\n          });\n        } else if (e.target.value === \"\") {\n          setLoading({\n            ...loading,\n            status2: \"error\",\n            help2: \"Please input your email id!\",\n          });\n        } else if (e.target.value) {\n          setLoading({ ...loading, status2: \"success\", help2: \"\" });\n        }\n      });\n  };\n\n  const [password, setPassword] = useState({\n    password: \"\",\n    confirmPassword: \"\",\n    validateStatus: \"\",\n    help: \"\",\n  });\n  const handleClick = (e) => {\n    var provider = new firebase.auth.FacebookAuthProvider();\n    provider.setCustomParameters({\n      display: \"popup\",\n    });\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n\n        // The signed-in user info.\n        var user = result.user;\n\n        let email = user.email,\n          name = user.displayName,\n          photoURL = user.photoURL;\n        facebookSignup({ email, name, photoURL });\n\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n        var accessToken = credential.accessToken;\n\n        // ...\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n\n        // ...\n      });\n  };\n\n  return (\n    <div>\n      {newLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"flex_login\">\n          <div>\n            <img src={Illustation} alt=\"illustration\" className=\"image_illus\" />\n          </div>\n\n          <div className=\"signup_form\">\n            <img src={InstaImage} className=\"insta_image\" />\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button fb_button\"\n              onClick={handleClick}\n            >\n              <FacebookFilled width=\"2rem\" /> Login with Facebook\n            </Button>\n\n            <span className=\"breaker\">OR</span>\n            <Form\n              form={form}\n              name=\"normal_login\"\n              className=\"login-form\"\n              onFinish={onFinish}\n              initialValues={{\n                remember: true,\n              }}\n            >\n              <Form.Item\n                name=\"email\"\n                hasFeedback\n                validateStatus={loading.status2}\n                help={loading.help2}\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your email id!\",\n                  },\n                ]}\n              >\n                <Input\n                  prefix={<MailOutlined className=\"site-form-item-icon\" />}\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  onChange={checkEmail}\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"password\"\n                allowClear\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your Password!\",\n                  },\n                ]}\n              >\n                <Input\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  type=\"password\"\n                  onChange={(e) =>\n                    setPassword({ ...password, password: e.target.value })\n                  }\n                  placeholder=\"Password\"\n                />\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"login-form-button\"\n                  style={{ margin: \"auto 0.5rem\" }}\n                >\n                  Login\n                </Button>\n                Or <Link to=\"/signup\">signup now!</Link>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\PrivateRoutes.js",[],"C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Header.js",["113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129"],"import React, { useContext, useState, useEffect } from \"react\";\nimport InstaImage from \"../images/insta_image.png\";\nimport Home from \"../icons/home.svg\";\nimport Plus from \"../icons/plus.svg\";\nimport Logout from \"../icons/log-out.svg\";\nimport UserImage from \"../images/user.svg\";\nimport Explore from \"../icons/explore.svg\";\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\nimport firebase from \"firebase/app\";\nimport { Modal, Form, Button, Upload, Input, Alert } from \"antd\";\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\n\nconst Header = () => {\n  const {\n    user,\n    updateProfile,\n    loading,\n    uploadPost,\n    posted,\n    update,\n  } = useContext(FirebaseContext);\n  const { addToast } = useToasts();\n  const [users, setUsers] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [error, setError] = useState(null);\n  const [file, setFile] = useState(null);\n  const [v, setV] = useState(null);\n  const formItemLayout = {\n    labelCol: {\n      span: 6,\n    },\n    wrapperCol: {\n      span: 14,\n    },\n  };\n\n  useEffect(() => {\n    if (update) {\n      addToast(\"Profile updated successfully!\", {\n        appearance: \"success\",\n        autoDismiss: true,\n      });\n    }\n  }, [update]);\n\n  const handleLogout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        // Sign-out successful.\n      })\n      .catch((error) => {\n        // An error happened.\n      });\n  };\n\n  const onFinish = async (data) => {\n    if (!file) {\n      setError(true);\n      setTimeout(() => {\n        setError(null);\n      }, 2000);\n    } else {\n      uploadPost(file, data.caption);\n      setIsModalVisible(false);\n    }\n  };\n  useEffect(() => {\n    if (posted) {\n      addToast(\"Posted successfully\", {\n        appearance: \"success\",\n        autoDismiss: true,\n      });\n    }\n  }, [posted]);\n  const normFile = (e) => {\n    if (Array.isArray(e)) {\n      return e;\n    }\n\n    return e && e.fileList;\n  };\n  const handleFileChange = (e) => {\n    setFile(e.file.originFileObj);\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const close = () => {\n    setShowUsers([]);\n    setV(\"\");\n  };\n  const [showUsers, setShowUsers] = useState([]);\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .get()\n      .then((data) => {\n        let arr = [];\n        data.docs.forEach((x) => {\n          const { name, userName, photoURL } = x.data();\n          let y = {};\n          y.name = name;\n          y.userName = userName;\n          y.photoURL = photoURL;\n          arr.push(y);\n        });\n        setUsers(arr);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    setV(e.target.value);\n    const regex = new RegExp(e.target.value, \"gi\");\n    let arr = [];\n    if (e.target.value == \"\") {\n      setShowUsers(arr);\n    } else {\n      users.forEach((item) => {\n        if (item.name.match(regex) || item.userName.match(regex))\n          arr.push(item);\n      });\n      setShowUsers(arr);\n    }\n  };\n  return (\n    <div>\n      {!loading && user ? (\n        <nav>\n          <NavLink to={`/`}>\n            <label style={{ cursor: \"pointer\" }}>\n              <img src={InstaImage} className=\"logo\" />\n            </label>\n          </NavLink>\n          <div>\n            <input\n              type=\"text\"\n              className=\"input_header\"\n              placeholder=\"Search\"\n              onChange={handleChange}\n              value={v}\n            />\n            <ul className=\"list-group\">\n              {showUsers.map((data) => (\n                <>\n                  <a href={`/${data.userName}`}>\n                    <li className=\"list-group-item\" onClick={close}>\n                      {data.photoURL ? (\n                        <img src={data.photoURL} className=\"search_img\" />\n                      ) : (\n                        <img src={UserImage} className=\"search_img\" />\n                      )}\n                      <div className=\"serach_flex\">\n                        <span className=\"userName_search\">{data.userName}</span>\n                        <span className=\"name_search\">{data.name}</span>\n                      </div>\n                    </li>\n                  </a>\n                </>\n              ))}\n            </ul>\n          </div>\n          <ul className=\"header_list\">\n            <NavLink to={`/`} className=\"hide_home\">\n              <li>\n                <img src={Home} />\n              </li>\n            </NavLink>\n            <NavLink to={`/explore/posts`}>\n              <li>\n                <img src={Explore} className=\"display_explore\" />\n              </li>\n            </NavLink>\n            <li>\n              <img\n                src={Plus}\n                style={{ cursor: \"pointer\" }}\n                onClick={showModal}\n              />\n            </li>\n\n            <a href={`/${user.userName}`}>\n              <li>\n                {user.photoURL ? (\n                  <img src={user.photoURL} className=\"user_header\" />\n                ) : (\n                  <img src={UserImage} className=\"user_header\" />\n                )}\n              </li>\n            </a>\n            <li>\n              <img src={Logout} onClick={handleLogout} />\n            </li>\n          </ul>\n          <Modal\n            title=\"Add a new post\"\n            visible={isModalVisible}\n            okButtonProps={{ style: { display: \"none\" } }}\n            onCancel={handleCancel}\n            className=\"wrapper\"\n          >\n            {error && (\n              <Alert\n                message=\"Please select a file!\"\n                type=\"error\"\n                showIcon\n                className=\"alert_show\"\n              />\n            )}\n\n            <Form name=\"validate_other\" {...formItemLayout} onFinish={onFinish}>\n              <Form.Item\n                name=\"upload\"\n                label=\"Upload\"\n                valuePropName=\"fileList\"\n                getValueFromEvent={normFile}\n              >\n                <Upload\n                  name=\"logo\"\n                  listType=\"picture\"\n                  maxCount={1}\n                  onChange={handleFileChange}\n                  accept=\"image/*\"\n                >\n                  <Button icon={<UploadOutlined />}>Click to upload</Button>\n                </Upload>\n              </Form.Item>\n              <Form.Item label=\"Caption\">\n                <Form.Item name=\"caption\" noStyle>\n                  <Input.TextArea />\n                </Form.Item>\n              </Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                size=\"middle\"\n                className=\"margin_upload\"\n              >\n                Upload Post\n              </Button>\n            </Form>\n          </Modal>\n        </nav>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Header;\n","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Profile.js",["130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162"],"import FirebaseContext from \"../Context/Firebase/FirebaseContext\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Link, useParams, Redirect } from \"react-router-dom\";\nimport UserImage from \"../images/user.svg\";\nimport firebase from \"firebase/app\";\nimport { Button, Modal, Form, Input, Upload, Tabs } from \"antd\";\nimport Loader from \"./Loader\";\nimport Posts from \"./Posts\";\nimport PostImage from \"../icons/posts.png\";\nimport Bookmark from \"../icons/bookmark.svg\";\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\nimport {\n  UploadOutlined,\n  AppleOutlined,\n  AndroidOutlined,\n} from \"@ant-design/icons\";\nimport ImgCrop from \"antd-img-crop\";\nimport \"antd/es/modal/style\";\nimport \"antd/es/slider/style\";\nimport Saved from \"./Saved\";\nimport Post from \"./Post\";\nconst Profile = (props) => {\n  const [contextUser, setContextUser] = useState(null);\n  const { addToast } = useToasts();\n  const [follow, setFollow] = useState(null);\n  const { user, updateProfile, update } = useContext(FirebaseContext);\n  let { userName } = useParams();\n  const [file, setFile] = useState(null);\n  const { TabPane } = Tabs;\n  const [User, setUser] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const normFile = (e) => {\n    setFile(e.target.files[0]);\n    var reader = new FileReader();\n    var url = reader.readAsDataURL(e.target.files[0]);\n    reader.onloadend = (e) => {\n      let imgSrc = [reader.result];\n      setPreview(imgSrc);\n    };\n  };\n  const [loading, setLoading] = useState(true);\n  const [validation, setValidation] = useState({});\n\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .where(\"userName\", \"==\", userName)\n      .onSnapshot((snap) => {\n        if (!snap.docs.length) props.history.push(\"/\");\n        else {\n          setUser(snap.docs[0].data());\n          if (\n            user.following &&\n            user.following.includes(snap.docs[0].data().email)\n          ) {\n            setFollow(true);\n          } else setFollow(false);\n          setLoading(false);\n        }\n      });\n  }, []);\n\n  const [follwers_show, setFollowers_show] = useState(null);\n  const [follwing_show, setFollowing_show] = useState(null);\n  const [isModalVisible1, setIsModalVisible1] = useState(false);\n  const [isModalVisible2, setIsModalVisible2] = useState(false);\n\n  const showModal1 = async () => {\n    if (User?.followers?.length <= 10) {\n      firebase\n        .firestore()\n        .collection(\"users\")\n        .where(\"email\", \"in\", User.followers)\n        .get()\n        .then((data) => {\n          let x = data.docs;\n          x = x.map((data) => {\n            let obj = {};\n            const { name, email, userName, photoURL } = data.data();\n            obj.email = email;\n            obj.name = name;\n            obj.userName = userName;\n            obj.photoURL = photoURL;\n            return obj;\n          });\n          setFollowers_show(x);\n          setIsModalVisible1(true);\n        });\n    } else {\n      let resolve = [];\n      User.followers.forEach((u) => {\n        resolve.push(\n          firebase\n            .firestore()\n            .collection(\"users\")\n            .doc(u)\n            .get()\n            .then((data) => {\n              let obj = {};\n              const { name, email, userName, photoURL } = data.data();\n              obj.email = email;\n              obj.name = name;\n              obj.userName = userName;\n              obj.photoURL = photoURL;\n              return obj;\n            })\n        );\n      });\n      let res = await Promise.all(resolve);\n      setFollowers_show(res);\n      setIsModalVisible1(true);\n    }\n  };\n  const showModal2 = async () => {\n    if (User?.following?.length <= 10) {\n      firebase\n        .firestore()\n        .collection(\"users\")\n        .where(\"email\", \"in\", User.following)\n        .get()\n        .then((data) => {\n          let x = data.docs;\n          x = x.map((data) => {\n            let obj = {};\n            const { name, email, userName, photoURL } = data.data();\n            obj.email = email;\n            obj.name = name;\n            obj.userName = userName;\n            obj.photoURL = photoURL;\n            return obj;\n          });\n          setFollowing_show(x);\n          setIsModalVisible2(true);\n        });\n    } else {\n      let resolve = [];\n      User.following.forEach((u) => {\n        resolve.push(\n          firebase\n            .firestore()\n            .collection(\"users\")\n            .doc(u)\n            .get()\n            .then((data) => {\n              let obj = {};\n              const { name, email, userName, photoURL } = data.data();\n              obj.email = email;\n              obj.name = name;\n              obj.userName = userName;\n              obj.photoURL = photoURL;\n              return obj;\n            })\n        );\n      });\n      let res = await Promise.all(resolve);\n      setFollowing_show(res);\n      setIsModalVisible2(true);\n    }\n  };\n  const handleOk2 = () => {\n    setIsModalVisible2(false);\n  };\n\n  const handleCancel2 = () => {\n    setIsModalVisible2(false);\n  };\n\n  const handleOk1 = () => {\n    setIsModalVisible1(false);\n  };\n\n  const handleCancel1 = () => {\n    setIsModalVisible1(false);\n  };\n\n  const [visible, setVisible] = React.useState(false);\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\n  const handleUserName = (e) => {\n    setValidation({ ...validation, status: \"validaing\" });\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .where(\"userName\", \"==\", e.target.value)\n      .limit(1)\n      .get()\n      .then((data) => {\n        if (data.docs.length && data.docs[0].data().userName != user.userName) {\n          setValidation({\n            ...validation,\n            status1: \"error\",\n            help1: \"This username already exists\",\n          });\n        } else if (e.target.value === \"\") {\n          setValidation({\n            ...validation,\n            status1: \"error\",\n            help1: \"Please input your username!\",\n          });\n        } else {\n          setValidation({ ...validation, status1: \"success\", help1: \"\" });\n        }\n      });\n  };\n  const [postsLen, setLen] = useState(0);\n  useEffect(() => {\n    setContextUser(user);\n    if (User) {\n      if (user.following && user.following.includes(User.email))\n        setFollow(true);\n      else setFollow(false);\n      firebase\n        .firestore()\n        .collection(\"posts\")\n        .where(\"email\", \"==\", User.email)\n        .get()\n        .then((data) => {\n          setLen(data.docs.length);\n        });\n    }\n  }, [user, User]);\n\n  const [form] = Form.useForm();\n  const [formLayout, setFormLayout] = useState(\"horizontal\");\n  const handleFinish = async (values) => {\n    if (!validation?.help1?.length) {\n      values.file = file;\n      updateProfile(values);\n      setVisible(false);\n    }\n  };\n  const onFormLayoutChange = ({ layout }) => {\n    setFormLayout(layout);\n  };\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n  const handleFollow = () => {\n    let following = user.following;\n    if (!following) {\n      following = [];\n    }\n    following.push(User.email);\n    firebase\n      .firestore()\n      .doc(`/users/${contextUser.email}`)\n      .update({\n        following: following,\n      })\n      .then(() => {\n        let followers = User.followers;\n        if (!followers) followers = [];\n        followers.push(contextUser.email);\n        firebase.firestore().doc(`/users/${User.email}`).update({\n          followers: followers,\n        });\n      });\n  };\n\n  const handleFollow1 = (userEmail) => {\n    let following = user.following;\n    if (!following) {\n      following = [];\n    }\n    following.push(userEmail);\n    firebase\n      .firestore()\n      .doc(`/users/${contextUser.email}`)\n      .update({\n        following: following,\n      })\n      .then(() => {\n        firebase\n          .firestore()\n          .collection(\"users\")\n          .doc(userEmail)\n          .get()\n          .then((data) => {\n            let followers = data.data().followers;\n            if (!followers) followers = [];\n            followers.push(contextUser.email);\n            firebase.firestore().collection(\"users\").doc(userEmail).update({\n              followers: followers,\n            });\n          });\n      });\n  };\n\n  const handleUnFollow = () => {\n    let following = user.following;\n    following = following.filter((user1) => {\n      return !(user1 == User.email);\n    });\n    firebase\n      .firestore()\n      .doc(`/users/${contextUser.email}`)\n      .update({\n        following: following,\n      })\n      .then(() => {\n        let followers = User.followers;\n        followers = followers.filter((user2) => {\n          return !(user2 == contextUser.email);\n        });\n        firebase.firestore().doc(`/users/${User.email}`).update({\n          followers: followers,\n        });\n      });\n  };\n  const handleUnFollow1 = (userEmail) => {\n    let following = user.following;\n    following = following.filter((user1) => {\n      return !(user1 == userEmail);\n    });\n    firebase\n      .firestore()\n      .doc(`/users/${contextUser.email}`)\n      .update({\n        following: following,\n      })\n      .then(() => {\n        firebase\n          .firestore()\n          .collection(\"users\")\n          .doc(userEmail)\n          .get()\n          .then((data) => {\n            let followers = data.data().followers;\n            followers = followers.filter((user2) => {\n              return !(user2 == contextUser.email);\n            });\n            firebase.firestore().doc(`/users/${userEmail}`).update({\n              followers: followers,\n            });\n          });\n      });\n  };\n\n  const formItemLayout =\n    formLayout === \"horizontal\"\n      ? {\n          labelCol: {\n            span: 4,\n          },\n          wrapperCol: {\n            span: 14,\n          },\n        }\n      : null;\n  const buttonItemLayout =\n    formLayout === \"horizontal\"\n      ? {\n          wrapperCol: {\n            span: 14,\n            offset: 4,\n          },\n        }\n      : null;\n\n  return (\n    <ImgCrop>\n      <div>\n        {User ? (\n          <div>\n            <Modal\n              title=\"Followers\"\n              visible={isModalVisible1}\n              onOk={handleOk1}\n              onCancel={handleCancel1}\n              footer={null}\n            >\n              {follwers_show\n                ? follwers_show.map((follower) => (\n                    <div className=\"modal_div\">\n                      {follower.photoURL ? (\n                        <img src={follower.photoURL} />\n                      ) : (\n                        <img src={UserImage} />\n                      )}\n                      <div className=\"modal_div_grid\">\n                        <a\n                          href={`/${follower.userName}`}\n                          onClick={() => setIsModalVisible1(false)}\n                        >\n                          <span className=\"modal_div_userName\">\n                            {follower.userName}\n                          </span>\n                        </a>\n                        <span className=\"modal_div_name\">\n                          {follower.userName}\n                        </span>\n                      </div>\n                      <div>\n                        {follower.email ===\n                        contextUser.email ? null : contextUser.following.includes(\n                            follower.email\n                          ) ? (\n                          <button\n                            className=\"edit_btn\"\n                            onClick={() => handleUnFollow1(follower.email)}\n                          >\n                            Unfollow\n                          </button>\n                        ) : (\n                          <button\n                            className=\"follow_btn\"\n                            onClick={() => handleFollow1(follower.email)}\n                          >\n                            Follow\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  ))\n                : null}\n            </Modal>\n            <Modal\n              title=\"Following\"\n              visible={isModalVisible2}\n              onOk={handleOk2}\n              onCancel={handleCancel2}\n              footer={null}\n            >\n              {follwing_show\n                ? follwing_show.map((follower) => (\n                    <div className=\"modal_div\">\n                      {follower.photoURL ? (\n                        <img src={follower.photoURL} />\n                      ) : (\n                        <img src={UserImage} />\n                      )}\n                      <div className=\"modal_div_grid\">\n                        <a\n                          href={`/${follower.userName}`}\n                          onClick={() => setIsModalVisible2(false)}\n                        >\n                          <span className=\"modal_div_userName\">\n                            {follower.userName}\n                          </span>\n                        </a>\n                        <span className=\"modal_div_name\">\n                          {follower.userName}\n                        </span>\n                      </div>\n                      <div>\n                        {follower.email ===\n                        contextUser.email ? null : contextUser.following.includes(\n                            follower.email\n                          ) ? (\n                          <button\n                            className=\"edit_btn\"\n                            onClick={() => handleUnFollow1(follower.email)}\n                          >\n                            Unfollow\n                          </button>\n                        ) : (\n                          <button\n                            className=\"follow_btn\"\n                            onClick={() => handleFollow1(follower.email)}\n                          >\n                            Follow\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  ))\n                : null}\n            </Modal>\n            <div className=\"profile_grid\">\n              <div className=\"profile_image\">\n                {User.photoURL ? (\n                  <img src={User.photoURL} className=\"user_image\" />\n                ) : (\n                  <img src={UserImage} className=\"user_image\" />\n                )}\n              </div>\n              <div className=\"flex_info\">\n                <span className=\"userName_profile\">\n                  {User.userName}{\" \"}\n                  {User.admin ? (\n                    <img\n                      src=\"https://www.flaticon.com/svg/static/icons/svg/1271/1271380.svg\"\n                      className=\"verify_icons\"\n                    />\n                  ) : null}{\" \"}\n                </span>{\" \"}\n                {contextUser.email == User.email ? (\n                  <button className=\"edit_btn1\" onClick={showModal}>\n                    Edit Profile\n                  </button>\n                ) : follow ? (\n                  <button className=\"edit_btn\" onClick={handleUnFollow}>\n                    Unfollow\n                  </button>\n                ) : (\n                  <button className=\"follow_btn\" onClick={handleFollow}>\n                    Follow\n                  </button>\n                )}\n              </div>\n              <div className=\"info_profile\">\n                <div className=\"info_grid\">\n                  <div>\n                    <span className=\"span_1\">{postsLen} </span>\n                    <span className=\"span_2\">posts</span>\n                  </div>\n\n                  {!User.followers || !User.followers.length ? (\n                    <div>\n                      <span className=\"span_1\">0 </span>\n                      <span className=\"span_2\">followers</span>\n                    </div>\n                  ) : (\n                    <div onClick={showModal1} className=\"pointer_div\">\n                      <span className=\"span_1\">{User.followers.length} </span>\n                      <span className=\"span_2\">followers</span>\n                    </div>\n                  )}\n                  {!User.following || !User.following.length ? (\n                    <div>\n                      <span className=\"span_1\">0 </span>\n                      <span className=\"span_2\">following</span>\n                    </div>\n                  ) : (\n                    <div onClick={showModal2} className=\"pointer_div\">\n                      <span className=\"span_1 \">{User.following.length} </span>\n                      <span className=\"span_2\">following</span>\n                    </div>\n                  )}\n                </div>\n\n                <div>\n                  <div>\n                    <span className=\"user_name_style\">{User.name}</span>\n                  </div>\n                  <div>\n                    {User.bio ? (\n                      <div className=\"bio_div\">{User.bio}</div>\n                    ) : null}\n                  </div>\n                  {User.website ? (\n                    <div>\n                      <a\n                        href={`//${User.website}`}\n                        target=\"_blank\"\n                        className=\"website_div\"\n                      >\n                        {User.website}\n                      </a>\n                    </div>\n                  ) : null}\n                </div>\n              </div>\n            </div>\n            <Modal\n              title=\"Edit Profile\"\n              visible={visible}\n              confirmLoading={confirmLoading}\n              okButtonProps={{ style: { display: \"none\" } }}\n              onCancel={handleCancel}\n            >\n              <div className=\"image_div\">\n                {User.photoURL ? (\n                  <img\n                    src={preview ? preview : User.photoURL}\n                    className=\"edit_image\"\n                  />\n                ) : (\n                  <img\n                    src={preview ? preview : UserImage}\n                    className=\"edit_image\"\n                  />\n                )}{\" \"}\n                <div className=\"edit_userName\">{user.userName}</div>\n                <br />\n                <label for=\"file-upload\" class=\"image_upload\">\n                  <span id=\"profile_btn\">Choose profile photo</span>\n                </label>\n                <input\n                  type=\"file\"\n                  id=\"file-upload\"\n                  name=\"avatar\"\n                  accept=\"image/*\"\n                  onChange={normFile}\n                />\n              </div>\n              <Form\n                {...formItemLayout}\n                layout={formLayout}\n                form={form}\n                style={{ marginTop: \"2rem\" }}\n                onFinish={handleFinish}\n                initialValues={{\n                  layout: formLayout,\n                  username: User.userName,\n                  email: User.email,\n                  name: User.name,\n                  bio: User.bio,\n                  website: User.website,\n                }}\n                onValuesChange={onFormLayoutChange}\n              >\n                <Form.Item label=\"Email\">\n                  <Form.Item\n                    name=\"email\"\n                    noStyle\n                    rules={[\n                      { required: true, message: \"Username is required\" },\n                    ]}\n                  >\n                    <Input placeholder=\"Please input\" disabled />\n                  </Form.Item>\n                </Form.Item>\n                <Form.Item label=\"Username\">\n                  <Form.Item\n                    name=\"username\"\n                    hasFeedback\n                    validateStatus={validation.status1}\n                    style={{ height: \"30px\" }}\n                    help={validation.help1}\n                    rules={[\n                      { required: true, message: \"Username is required\" },\n                    ]}\n                  >\n                    <Input\n                      placeholder=\"Please input\"\n                      onChange={handleUserName}\n                    />\n                  </Form.Item>\n                </Form.Item>\n                <Form.Item label=\"Website\">\n                  <Form.Item name=\"website\" style={{ height: \"30px\" }}>\n                    <Input placeholder=\"Your website\" />\n                  </Form.Item>\n                </Form.Item>\n\n                <Form.Item label=\"Name\">\n                  <Form.Item\n                    name=\"name\"\n                    noStyle\n                    rules={[{ required: true, message: \"Name is required\" }]}\n                  >\n                    <Input placeholder=\"Your name\" />\n                  </Form.Item>\n                </Form.Item>\n\n                <Form.Item label=\"Bio\">\n                  <Form.Item name=\"bio\" noStyle>\n                    <Input.TextArea />\n                  </Form.Item>\n                </Form.Item>\n                <Form.Item>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"login-form-button\"\n                    style={{ margin: \"auto 0\" }}\n                  >\n                    Save\n                  </Button>\n                </Form.Item>\n              </Form>\n            </Modal>\n            <Tabs defaultActiveKey=\"1\" centered=\"true\">\n              <TabPane\n                tab={\n                  <span>\n                    <img\n                      src={PostImage}\n                      className=\"icons\"\n                      style={{ height: \"1.8rem\" }}\n                    />\n                    Posts\n                  </span>\n                }\n                key=\"1\"\n              >\n                <Posts userName={userName} />\n              </TabPane>\n              {User.userName === user.userName && (\n                <TabPane\n                  tab={\n                    <span>\n                      <img src={Bookmark} className=\"icons\" />\n                      Saved\n                    </span>\n                  }\n                  key=\"2\"\n                >\n                  <Saved />\n                </TabPane>\n              )}\n            </Tabs>\n          </div>\n        ) : (\n          <Loader />\n        )}\n      </div>\n    </ImgCrop>\n  );\n};\n\nexport default Profile;\n","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Not_Found.js",["163"],"import React from \"react\";\nimport Not_Found1 from \"../images/404.svg\";\n\nconst Not_Found = () => {\n  return (\n    <div>\n      <img src={Not_Found1} className=\"found_image\" />\n    </div>\n  );\n};\n\nexport default Not_Found;\n","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Signup.js",["164","165","166","167","168","169","170","171","172","173","174","175","176"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport {\n  UserOutlined,\n  LockOutlined,\n  MailOutlined,\n  FacebookFilled,\n} from \"@ant-design/icons\";\nimport InstaImage from \"../images/insta_image.png\";\nimport Illustation from \"../images/login_illus.jpg\";\nimport \"antd/dist/antd.css\";\nimport { auth } from \"../firebase/config\";\nimport firebase from \"firebase/app\";\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"./Loader\";\n\nconst Signup = (props) => {\n  const { addToast } = useToasts();\n  const [form] = Form.useForm();\n  const [userName, setUserName] = useState(\"\");\n  const [loading, setLoading] = useState({});\n  const {\n    user,\n    signup,\n    facebookSignup,\n    isAuthenticated,\n    loading: newLoading,\n    error,\n  } = useContext(FirebaseContext);\n\n  const onFinish = async (values) => {\n    if (!loading?.help2?.length && !loading?.help1?.length)\n      await signup(values);\n  };\n  useEffect(() => {\n    if (user) props.history.push(`/${user.userName}`);\n  }, [user]);\n\n  useEffect(() => {\n    if (error) {\n      addToast(error, {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n  }, [error]);\n\n  const checkUserName = (e) => {\n    setLoading({ ...loading, status1: \"validating\" });\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .where(\"userName\", \"==\", e.target.value)\n      .limit(1)\n      .get()\n      .then((data) => {\n        if (data.docs.length) {\n          setLoading({\n            ...loading,\n            status1: \"error\",\n            help1: \"This username already exists\",\n          });\n        } else if (e.target.value === \"\") {\n          setLoading({\n            ...loading,\n            status1: \"error\",\n            help1: \"Please input your username!\",\n          });\n        } else {\n          setLoading({ ...loading, status1: \"success\", help1: \"\" });\n        }\n      });\n  };\n\n  const checkEmail = (e) => {\n    setLoading({ ...loading, status2: \"validating\" });\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .where(\"email\", \"==\", e.target.value)\n      .limit(1)\n      .get()\n      .then((data) => {\n        if (data.docs.length) {\n          setLoading({\n            ...loading,\n            status2: \"error\",\n            help2: \"This email already exists\",\n          });\n        } else if (e.target.value === \"\") {\n          setLoading({\n            ...loading,\n            status2: \"error\",\n            help2: \"Please input your email id!\",\n          });\n        } else if (e.target.value) {\n          setLoading({ ...loading, status2: \"success\", help2: \"\" });\n        }\n      });\n  };\n\n  const [password, setPassword] = useState({\n    password: \"\",\n    confirmPassword: \"\",\n    validateStatus: \"\",\n    help: \"\",\n  });\n  const handleClick = (e) => {\n    var provider = new firebase.auth.FacebookAuthProvider();\n    provider.setCustomParameters({\n      display: \"popup\",\n    });\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n\n        // The signed-in user info.\n        var user = result.user;\n\n        let email = user.email,\n          name = user.displayName,\n          photoURL = user.photoURL;\n        facebookSignup({ email, name, photoURL });\n\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n        var accessToken = credential.accessToken;\n\n        // ...\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n\n        // ...\n      });\n  };\n\n  return (\n    <ToastProvider>\n      <div>\n        {newLoading ? (\n          <Loader />\n        ) : (\n          <div className=\"flex_login\">\n            <div>\n              <img\n                src={Illustation}\n                alt=\"illustration\"\n                className=\"image_illus\"\n              />\n            </div>\n\n            <div className=\"signup_form\">\n              <img src={InstaImage} className=\"insta_image\" />\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button fb_button\"\n                onClick={handleClick}\n              >\n                <FacebookFilled width=\"2rem\" /> Signup with Facebook\n              </Button>\n\n              <span className=\"breaker\">OR</span>\n              <Form\n                form={form}\n                name=\"normal_login\"\n                className=\"login-form\"\n                onFinish={onFinish}\n                initialValues={{\n                  remember: true,\n                }}\n              >\n                <Form.Item\n                  name=\"email\"\n                  hasFeedback\n                  validateStatus={loading.status2}\n                  help={loading.help2}\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input your email id!\",\n                    },\n                  ]}\n                >\n                  <Input\n                    prefix={<MailOutlined className=\"site-form-item-icon\" />}\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    onChange={checkEmail}\n                  />\n                </Form.Item>\n                <Form.Item\n                  name=\"name\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input your Name!\",\n                    },\n                  ]}\n                >\n                  <Input\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                    placeholder=\"Full Name\"\n                  />\n                </Form.Item>\n                <Form.Item\n                  name=\"userName\"\n                  hasFeedback\n                  validateStatus={loading.status1}\n                  help={loading.help1}\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input your Username!\",\n                    },\n                  ]}\n                >\n                  <Input\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                    placeholder=\"Username\"\n                    onChange={checkUserName}\n                  />\n                </Form.Item>\n                <Form.Item\n                  name=\"password\"\n                  allowClear\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input your Password!\",\n                    },\n                  ]}\n                >\n                  <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    onChange={(e) =>\n                      setPassword({ ...password, password: e.target.value })\n                    }\n                    placeholder=\"Password\"\n                  />\n                </Form.Item>\n\n                <Form.Item>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"login-form-button\"\n                    style={{ margin: \"auto 0.5rem\" }}\n                  >\n                    Signup\n                  </Button>\n                  Or <Link to=\"/\">login now!</Link>\n                </Form.Item>\n              </Form>\n            </div>\n          </div>\n        )}\n      </div>\n    </ToastProvider>\n  );\n};\n\nexport default Signup;\n","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Explore.js",["177","178","179","180","181","182","183"],"import React, { useEffect, useState, useContext } from \"react\";\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\nimport firebase from \"firebase/app\";\nimport Heart from \"../icons/heart.svg\";\nimport Upload from \"../icons/upload.svg\";\nimport { Link } from \"react-router-dom\";\nimport { Spin } from \"antd\";\nimport Loader from \"./Loader\";\nconst Explore = (props) => {\n  const { user, updateProfile } = useContext(FirebaseContext);\n  const [loading, setLoading] = useState(true);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    let x = [];\n    firebase\n      .firestore()\n      .collection(\"posts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .limit(9)\n      .get()\n      .then((data) => {\n        if (data.docs.length) {\n          data.docs.forEach((post) => {\n            x.push(post.data());\n          });\n        }\n        setPosts(x);\n        setLoading(false);\n      });\n  }, []);\n  return (\n    <div>\n      {loading ? (\n        <Loader />\n      ) : posts.length ? (\n        <div className=\"grid_posts\">\n          {posts.map((post) => (\n            <a href={`/posts/${post.id}`}>\n              <div className=\"image_1\">\n                <img src={post.url} className=\"image_post\" loading=\"lazy\" />\n                <div className=\"middle1\">\n                  <div className=\"text1\">\n                    {!post.likes ? (\n                      <span>\n                        0{\" \"}\n                        <i\n                          class=\"fa fa-heart\"\n                          aria-hidden=\"true\"\n                          style={{ color: \"white\" }}\n                        ></i>\n                      </span>\n                    ) : (\n                      <span>\n                        {post.likes.length}{\" \"}\n                        <i\n                          class=\"fa fa-heart\"\n                          aria-hidden=\"true\"\n                          style={{ color: \"white\" }}\n                        ></i>\n                      </span>\n                    )}\n                    &nbsp;&nbsp;\n                    {!post.comments ? (\n                      <span>\n                        0{\" \"}\n                        <i\n                          class=\"fa fa-comment\"\n                          aria-hidden=\"true\"\n                          style={{ color: \"white\" }}\n                        ></i>\n                      </span>\n                    ) : (\n                      <span>\n                        {post.comments.length}{\" \"}\n                        <i\n                          class=\"fa fa-comment\"\n                          aria-hidden=\"true\"\n                          style={{ color: \"white\" }}\n                        />\n                      </span>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </a>\n          ))}\n        </div>\n      ) : (\n        <img src={Upload} className=\"no_post\" />\n      )}\n    </div>\n  );\n};\n\nexport default Explore;\n","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Post.js",["184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201"],"import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport { Link, useParams, Redirect } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport Loader from \"./Loader\";\nimport UserImage from \"../images/user.svg\";\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { Popconfirm } from \"antd\";\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\n\nconst Post = (props) => {\n  const { postId } = useParams();\n  const [post, setPost] = useState(null);\n  const [owner, setOwner] = useState(null);\n  const [heart, setHeart] = useState(false);\n  const myRef = useRef(null);\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const [latestComments, setLatest] = useState([]);\n  var l;\n\n  const arraysEqual = (a, b) => {\n    if (a === b) return true;\n    if (a == null || b == null) return false;\n    if (a.length !== b.length) return false;\n\n    for (var i = 0; i < a.length; ++i) {\n      if (a[i].comment != b[i].comment || a[i].time != b[i].time) return false;\n    }\n    return true;\n  };\n\n  const handleConfirm = () => {\n    var postRef = firebase.storage().ref().child(`/posts/${post.id}`);\n    postRef\n      .delete()\n      .then(function () {\n        firebase\n          .firestore()\n          .doc(`/posts/${post.id}`)\n          .delete()\n          .then(() => {\n            props.history.push(\"/\");\n          });\n      })\n      .catch(function (error) {\n        // Uh-oh, an error occurred!\n      });\n  };\n  const { user, updateProfile } = useContext(FirebaseContext);\n\n  const compare = (a, b) => {\n    return a.time < b.time;\n  };\n\n  const reload = () => {\n    firebase\n      .firestore()\n      .doc(`/posts/${postId}`)\n      .get()\n      .then((data) => {\n        if (!data.exists) {\n          props.history.push(\"/\");\n        } else {\n          if (data.data().comments) {\n            let x = data.data().comments;\n            x.sort(compare);\n\n            let newComments = [];\n            let resol = [];\n            for (let i = 0; i < x.length; i++) {\n              resol.push(\n                firebase\n                  .firestore()\n                  .doc(`/users/${x[i].email}`)\n                  .get()\n                  .then((u) => {\n                    let p = {};\n                    p = {\n                      ...x[i],\n                      userName: u.data().userName,\n                      photoURL: u.data().photoURL,\n                    };\n                    return p;\n                  })\n              );\n            }\n            Promise.all(resol).then((ans) => {\n              setComments([...ans]);\n            });\n\n            let count = 0;\n            var newArr = [];\n\n            for (let i = x.length - 1; i >= 0; i--) {\n              if (count == 2) break;\n              firebase\n                .firestore()\n                .doc(`/users/${x[i].email}`)\n                .get()\n                .then((u) => {\n                  let temp = {};\n                  temp.comment = x[i].comment;\n                  temp.time = x[i].comment;\n                  temp.userName = u.data().userName;\n                  temp.photoURL = u.data().photoURL;\n                  newArr.push(temp);\n                });\n              count += 1;\n            }\n            setLatest(newArr);\n          }\n          setPost(data.data());\n          if (myRef && myRef.current)\n            myRef.current.scrollIntoView({ behavior: \"smooth\" });\n\n          firebase\n            .firestore()\n            .doc(`/users/${data.data().email}`)\n            .get()\n            .then((u) => {\n              setOwner(u.data());\n            });\n        }\n      });\n    if (myRef && myRef.current)\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\n    setComment(\"\");\n  };\n\n  useEffect(() => {\n    firebase\n      .firestore()\n      .doc(`/posts/${postId}`)\n      .get()\n      .then((data) => {\n        if (!data.exists) {\n          props.history.push(\"/\");\n        } else {\n          if (data.data().comments) {\n            let x = data.data().comments;\n            x.sort(compare);\n\n            let newComments = [];\n            let resol = [];\n            for (let i = 0; i < x.length; i++) {\n              resol.push(\n                firebase\n                  .firestore()\n                  .doc(`/users/${x[i].email}`)\n                  .get()\n                  .then((u) => {\n                    let p = {};\n                    p = {\n                      ...x[i],\n                      userName: u.data().userName,\n                      photoURL: u.data().photoURL,\n                    };\n                    return p;\n                  })\n              );\n            }\n            Promise.all(resol).then((ans) => {\n              setComments([...ans]);\n            });\n\n            let count = 0;\n            var newArr = [];\n\n            for (let i = x.length - 1; i >= 0; i--) {\n              if (count == 2) break;\n              firebase\n                .firestore()\n                .doc(`/users/${x[i].email}`)\n                .get()\n                .then((u) => {\n                  let temp = {};\n                  temp.comment = x[i].comment;\n                  temp.time = x[i].comment;\n                  temp.userName = u.data().userName;\n                  temp.photoURL = u.data().photoURL;\n                  newArr.push(temp);\n                });\n              count += 1;\n            }\n            setLatest(newArr);\n          }\n          setPost(data.data());\n\n          firebase\n            .firestore()\n            .doc(`/users/${data.data().email}`)\n            .get()\n            .then((u) => {\n              setOwner(u.data());\n            });\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    if (myRef && myRef.current)\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\n  }, [comments]);\n\n  const handleDBClick = () => {\n    setHeart(true);\n    setTimeout(() => {\n      setHeart(false);\n    }, 800);\n    if (post.likes) {\n      if (!post.likes.includes(user.email)) {\n        firebase\n          .firestore()\n          .doc(`/posts/${post.id}`)\n          .get()\n\n          .then((data) => {\n            l = data.data().likes;\n            l.push(user.email);\n            firebase.firestore().doc(`/posts/${post.id}`).update({\n              likes: l,\n            });\n          })\n          .then(() => {\n            setPost({ ...post, likes: l });\n          });\n      }\n    } else {\n      firebase\n        .firestore()\n        .doc(`/posts/${post.id}`)\n        .get()\n        .then((data) => {\n          if (data.data().likes) l = data.data().likes;\n          else l = [];\n          l.push(user.email);\n          firebase.firestore().doc(`/posts/${post.id}`).update({\n            likes: l,\n          });\n        })\n        .then(() => {\n          setPost({ ...post, likes: l });\n        });\n    }\n  };\n\n  const handleLike = () => {\n    if (post.likes) {\n      if (!post.likes.includes(user.email)) {\n        firebase\n          .firestore()\n          .doc(`/posts/${post.id}`)\n          .get()\n\n          .then((data) => {\n            l = data.data().likes;\n            l.push(user.email);\n            firebase.firestore().doc(`/posts/${post.id}`).update({\n              likes: l,\n            });\n          })\n          .then(() => {\n            setPost({ ...post, likes: l });\n          });\n      } else {\n        firebase\n          .firestore()\n          .doc(`/posts/${post.id}`)\n          .get()\n          .then((data) => {\n            l = data.data().likes;\n            l = l.filter((like) => like !== user.email);\n            firebase.firestore().doc(`/posts/${post.id}`).update({\n              likes: l,\n            });\n          })\n          .then(() => {\n            setPost({ ...post, likes: l });\n          });\n      }\n    } else {\n      firebase\n        .firestore()\n        .doc(`/posts/${post.id}`)\n        .get()\n        .then((data) => {\n          if (data.data().likes) l = data.data().likes;\n          else l = [];\n          l.push(user.email);\n          firebase.firestore().doc(`/posts/${post.id}`).update({\n            likes: l,\n          });\n        })\n        .then(() => {\n          setPost({ ...post, likes: l });\n        });\n    }\n  };\n\n  const handleBookmark = () => {\n    if (user.bookmarks) {\n      if (!user.bookmarks.includes(post.id)) {\n        let bookmarks = user.bookmarks;\n        bookmarks.push(post.id);\n        firebase\n          .firestore()\n          .doc(`/users/${user.email}`)\n          .update({\n            bookmarks,\n          })\n          .then(() => {});\n      } else {\n        let bookmarks = user.bookmarks;\n        bookmarks = bookmarks.filter((like) => like !== post.id);\n        firebase\n          .firestore()\n          .doc(`/users/${user.email}`)\n          .update({\n            bookmarks,\n          })\n          .then(() => {});\n      }\n    } else {\n      let bookmarks = [];\n      bookmarks.push(post.id);\n      firebase\n        .firestore()\n        .doc(`/users/${user.email}`)\n        .update({\n          bookmarks,\n        })\n        .then(() => {});\n    }\n  };\n\n  const handleComment = (e) => {\n    e.preventDefault();\n    if (comment.length) {\n      let newComment = {};\n      newComment.time = Date.now();\n      newComment.comment = comment;\n      newComment.email = user.email;\n      firebase\n        .firestore()\n        .doc(`/posts/${post.id}`)\n        .get()\n        .then((data) => {\n          if (data.data().comments) {\n            let comments = data.data().comments;\n            comments.push(newComment);\n            firebase\n              .firestore()\n              .doc(`/posts/${post.id}`)\n              .update({ comments })\n              .then(() => {\n                reload();\n              });\n          } else {\n            let comments = [];\n            comments.push(newComment);\n            firebase\n              .firestore()\n              .doc(`/posts/${post.id}`)\n              .update({ comments })\n              .then(() => {\n                reload();\n              });\n          }\n        });\n    }\n    if (myRef && myRef.current)\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\n    setComment(\"\");\n  };\n\n  return (\n    <div>\n      {!post || !owner ? (\n        <Loader />\n      ) : (\n        <div className=\"post_grid\">\n          <div className=\"post_photo_grid\">\n            <div className=\"post_info_grid\">\n              {owner.photoURL ? (\n                <img src={owner.photoURL} className=\"image_circle\" />\n              ) : (\n                <img src={UserImage} className=\"image_circle\" />\n              )}\n              <div>\n                <Link to={`/${owner.userName}`} style={{ color: \"black\" }}>\n                  {owner.userName}\n                </Link>\n              </div>\n              {(user.email === post.email ||\n                user.email == \"mihir0699@gmail.com\") && (\n                <Popconfirm\n                  placement=\"top\"\n                  title=\"Delete this post?\"\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                  onConfirm={handleConfirm}\n                >\n                  <EllipsisOutlined\n                    style={{ fontSize: \"1.5rem\", marginRight: \"0.5rem\" }}\n                    className=\"delete_post\"\n                  />\n                </Popconfirm>\n              )}\n            </div>\n            <div className=\"inner_div1\">\n              <img\n                src={post.url}\n                className=\"post_image\"\n                onDoubleClick={handleDBClick}\n              />\n              {heart && <i className=\"fa fa-heart\" aria-hidden=\"true\" />}\n            </div>\n          </div>\n          <div className=\"bio_grid\">\n            {owner.photoURL ? (\n              <img src={owner.photoURL} className=\"image_circle1\" />\n            ) : (\n              <img src={UserImage} className=\"image_circle1\" />\n            )}\n            <div>\n              <Link to={`/${owner.userName}`} style={{ color: \"black\" }}>\n                {\" \"}\n                <span className=\"post_userName\">{owner.userName}</span>{\" \"}\n              </Link>{\" \"}\n              {post.caption}\n            </div>\n          </div>\n          <div className=\"comments_grid\">\n            <div className=\"grid_c_div\">\n              {comments.length ? (\n                <>\n                  {comments.map((c) => (\n                    <div className=\"comment_grid\">\n                      {c.photoURL ? (\n                        <img src={c.photoURL} className=\"comment_img\" />\n                      ) : (\n                        <img src={UserImage} className=\"comment_img\" />\n                      )}\n\n                      <div>\n                        {\" \"}\n                        <span className=\"post_userName\">\n                          <Link\n                            to={`/${c.userName}`}\n                            style={{ color: \"black\" }}\n                          >\n                            {c.userName}\n                          </Link>\n                        </span>\n                        &nbsp;\n                        <span>{c.comment}</span>\n                      </div>\n                    </div>\n                  ))}\n                  <div ref={myRef}></div>\n                </>\n              ) : null}\n            </div>\n          </div>\n          {latestComments.length ? (\n            <div className=\"mobile_comments\">\n              <span className=\"view_comments\">\n                View all {comments.length} comments\n              </span>\n              {latestComments.length > 0 &&\n                latestComments.map((com) => (\n                  <div>\n                    <span className=\"post_userName\">\n                      <Link to={`/${com.userName}`} style={{ color: \"black\" }}>\n                        {com.userName}\n                      </Link>\n                    </span>\n                    &nbsp;\n                    {com.comment}\n                  </div>\n                ))}\n            </div>\n          ) : null}\n\n          <div className=\"compo_grid\">\n            <div className=\"heart_grid\">\n              <div>\n                <i\n                  class={`${\n                    !post.likes\n                      ? `fa fa-heart-o`\n                      : post.likes.includes(user.email)\n                      ? `fa fa-heart`\n                      : `fa fa-heart-o`\n                  }`}\n                  aria-hidden=\"true\"\n                  onClick={handleLike}\n                />\n                <i class=\"fa fa-comment-o\" aria-hidden=\"true\"></i>\n                <i class=\"fa fa-share\" aria-hidden=\"true\"></i>\n              </div>\n              <i\n                className={`${\n                  !user.bookmarks\n                    ? `fa fa-bookmark-o bookmark`\n                    : user.bookmarks.includes(post.id)\n                    ? `fa fa-bookmark bookmark`\n                    : `fa fa-bookmark-o bookmark`\n                }`}\n                aria-hidden=\"true\"\n                onClick={handleBookmark}\n                style={{ marginRight: \"0.5rem\" }}\n              ></i>\n            </div>\n            <div className=\"separate\">\n              {post.likes ? (\n                <span className=\"likes_div\">{post.likes.length} likes</span>\n              ) : (\n                <span className=\"likes_div\">0 likes</span>\n              )}\n            </div>\n            <div className=\"text_input_post\">\n              <form onSubmit={handleComment}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Add a comment\"\n                  onChange={(e) => setComment(e.target.value)}\n                  value={comment}\n                />\n                <button\n                  className=\"post_comment\"\n                  onClick={handleComment}\n                  disabled={comment.length ? undefined : \"disabled\"}\n                >\n                  Post\n                </button>\n              </form>\n            </div>\n          </div>\n          <div className=\"hidden_input\">\n            <div className=\"text_input_post1\">\n              <form onSubmit={handleComment}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Add a comment\"\n                  onChange={(e) => setComment(e.target.value)}\n                  value={comment}\n                />\n                <button\n                  className=\"post_comment\"\n                  type=\"submit\"\n                  disabled={comment.length ? undefined : \"disabled\"}\n                >\n                  Post\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Post;\n","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Home.js",["202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217"],"import React, { useEffect, useState, useContext } from \"react\";\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\nimport firebase from \"firebase/app\";\nimport FeedPost from \"./FeedPost\";\nimport Loader from \"./Loader\";\nimport UserImage from \"../images/user.svg\";\nimport Social from \"../images/social.svg\";\nimport { Link } from \"react-router-dom\";\nconst Home = () => {\n  const { user, updateProfile } = useContext(FirebaseContext);\n  const [posts, setPosts] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [users, setUsers] = useState(null);\n\n  const func = (a, b) => {\n    return 0.5 - Math.random();\n  };\n  const handleFollow1 = (userEmail) => {\n    let following = user.following;\n    if (!following) {\n      following = [];\n    }\n    following.push(userEmail);\n    firebase\n      .firestore()\n      .doc(`/users/${user.email}`)\n      .update({\n        following: following,\n      })\n      .then(() => {\n        firebase\n          .firestore()\n          .collection(\"users\")\n          .doc(userEmail)\n          .get()\n          .then((data) => {\n            let followers = data.data().followers;\n            if (!followers) followers = [];\n            followers.push(user.email);\n            firebase.firestore().collection(\"users\").doc(userEmail).update({\n              followers: followers,\n            });\n          });\n      });\n  };\n  const handleUnFollow1 = (userEmail) => {\n    let following = user.following;\n    following = following.filter((user1) => {\n      return !(user1 == userEmail);\n    });\n    firebase\n      .firestore()\n      .doc(`/users/${user.email}`)\n      .update({\n        following: following,\n      })\n      .then(() => {\n        firebase\n          .firestore()\n          .collection(\"users\")\n          .doc(userEmail)\n          .get()\n          .then((data) => {\n            let followers = data.data().followers;\n            followers = followers.filter((user2) => {\n              return !(user2 == user.email);\n            });\n            firebase.firestore().doc(`/users/${userEmail}`).update({\n              followers: followers,\n            });\n          });\n      });\n  };\n  useEffect(() => {\n    if (user) {\n      if (user?.following?.length) {\n        firebase\n          .firestore()\n          .collection(\"posts\")\n          .where(\"email\", \"in\", [...user.following, user.email])\n          .limit(10)\n          .get()\n          .then((data) => {\n            if (data.docs.length) {\n              let x = [];\n              data.docs.forEach((post) => {\n                x.push(post.data().id);\n              });\n              setPosts(x);\n              setLoading(false);\n            }\n          });\n      }\n\n      if (user?.following?.length > 0) {\n        firebase\n          .firestore()\n          .collection(\"users\")\n          .where(\"email\", \"not-in\", user.following)\n          .get()\n          .then((data) => {\n            if (data.docs) {\n              let x = [];\n              data.docs.forEach((u) => {\n                if (\n                  u.data().email !== user.email &&\n                  u.data().email != \"mihir0699@gmail.com\"\n                )\n                  x.push(u.data());\n              });\n              x.sort(func);\n              if (!user?.following?.includes(\"mihir0699@gmail.com\")) {\n                firebase\n                  .firestore()\n                  .doc(`/users/mihir0699@gmail.com`)\n                  .get()\n                  .then((data) => {\n                    x.unshift(data.data());\n                    x.sort(func);\n                    let z = x.slice(0, 4);\n\n                    setUsers(z);\n                  });\n              } else {\n                let z = x.slice(0, 4);\n                setUsers(z);\n              }\n            }\n          });\n      } else {\n        firebase\n          .firestore()\n          .collection(\"users\")\n          .get()\n          .then((data) => {\n            if (data.docs) {\n              let x = [];\n              data.docs.forEach((u) => {\n                if (\n                  u.data().email != user.email &&\n                  u.data().email != \"mihir0699@gmail.com\"\n                )\n                  x.push(u.data());\n              });\n              if (!user?.following?.includes(\"mihir0699@gmail.com\")) {\n                firebase\n                  .firestore()\n                  .doc(`/users/mihir0699@gmail.com`)\n                  .get()\n                  .then((data) => {\n                    x.unshift(data.data());\n                    x.sort(func);\n                    let z = x.slice(0, 4);\n                    setUsers(z);\n                  });\n              }\n              x.sort(func);\n              let z = x.slice(0, 4);\n              setUsers(z);\n            }\n          });\n      }\n    }\n\n    setLoading(false);\n  }, []);\n  return (\n    <div>\n      {loading || !users ? (\n        <Loader />\n      ) : posts ? (\n        <div className=\"home_grid\">\n          <div>\n            {posts.map((post) => (\n              <FeedPost id={post} />\n            ))}\n          </div>\n          <div className=\"sidebar\">\n            <div className=\"fixed_div\">\n              {user.photoURL ? (\n                <img src={user.photoURL} className=\"user_home\" />\n              ) : (\n                <img src={UserImage} className=\"user_home\" />\n              )}\n              <div className=\"serach_flex\">\n                <Link to={`/${user.userName}`}>\n                  <span className=\"userName_search\">{user.userName}</span>\n                </Link>\n                <span className=\"name_search\">{user.name}</span>\n              </div>\n            </div>\n            {users?.length ? (\n              <div className=\"suggestions_div\">\n                <h3>Suggestions for you</h3>\n                <div>\n                  {users.map((u) => (\n                    <div className=\"suggest_div\">\n                      {\" \"}\n                      {u.photoURL ? (\n                        <img src={u.photoURL} className=\"user_home\" />\n                      ) : (\n                        <img src={UserImage} className=\"user_home\" />\n                      )}\n                      <div className=\"serach_flex\">\n                        <Link to={`/${u.userName}`}>\n                          <span className=\"userName_search\">{u.userName}</span>\n                        </Link>\n                        <span className=\"name_search\">{u.name}</span>\n                      </div>\n                      {user?.following.includes(u.email) ? (\n                        <button\n                          className=\"un_home\"\n                          onClick={() => handleUnFollow1(u.email)}\n                        >\n                          Unfollow\n                        </button>\n                      ) : (\n                        <button\n                          className=\"follow_home\"\n                          onClick={() => handleFollow1(u.email)}\n                        >\n                          {\" \"}\n                          Follow\n                        </button>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      ) : (\n        <div className=\"home_flex\">\n          <div className=\"sidebar1\">\n            <div className=\"fixed_div1\">\n              {user.photoURL ? (\n                <img src={user.photoURL} className=\"user_home\" />\n              ) : (\n                <img src={UserImage} className=\"user_home\" />\n              )}\n              <div className=\"serach_flex\">\n                <Link to={`/${user.userName}`}>\n                  <span className=\"userName_search\">{user.userName}</span>\n                </Link>\n                <span className=\"name_search\">{user.name}</span>\n              </div>\n            </div>\n            <div className=\"suggestions_div1\">\n              <h3>Suggestions for you</h3>\n              <div>\n                {users.map((u) => (\n                  <div className=\"suggest_div\">\n                    {\" \"}\n                    {u.photoURL ? (\n                      <img src={u.photoURL} className=\"user_home\" />\n                    ) : (\n                      <img src={UserImage} className=\"user_home\" />\n                    )}\n                    <div className=\"serach_flex\">\n                      <Link to={`/${u.userName}`}>\n                        <span className=\"userName_search\">{u.userName}</span>\n                      </Link>\n                      <span className=\"name_search\">{u.name}</span>\n                    </div>\n                    {user?.following?.includes(u.email) ? (\n                      <button\n                        className=\"un_home\"\n                        onClick={() => handleUnFollow1(u.email)}\n                      >\n                        Unfollow\n                      </button>\n                    ) : (\n                      <button\n                        className=\"follow_home\"\n                        onClick={() => handleFollow1(u.email)}\n                      >\n                        {\" \"}\n                        Follow\n                      </button>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n          <div>\n            <img src={Social} className=\"social_image\" />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Footer.js",[],"C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\Context\\Firebase\\FireState.js",["218","219"],"import React, { useContext, useReducer, useEffect } from \"react\";\nimport FirebaseContext from \"./FirebaseContext\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport FireReducer from \"./FireReducer\";\nimport { nanoid } from \"nanoid\";\n\nconst FireState = (props) => {\n  const initialState = {\n    isAuthenticated: false,\n    user: null,\n    loading: true,\n    error: null,\n    posted: false,\n    update: false,\n  };\n  const [state, dispatch] = useReducer(FireReducer, initialState);\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n      if (!user) {\n        dispatch({ type: \"USER_LOADED\", payload: null });\n      } else {\n        firebase\n          .firestore()\n          .collection(\"users\")\n          .doc(user.email)\n          .onSnapshot((snap) => {\n            dispatch({ type: \"USER_LOADED\", payload: snap.data() });\n          });\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  useEffect(() => {\n    if (state.user) {\n      firebase\n        .firestore()\n        .collection(\"users\")\n        .doc(state.user.email)\n        .onSnapshot((snap) => {\n          dispatch({ type: \"USER_LOADED\", payload: snap.data() });\n        });\n    }\n  }, []);\n\n  const signup = async (values) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(values.email, values.password)\n      .then(async (resp) => {\n        const docRef = firebase.firestore().doc(`/users/${values.email}`);\n        let user = {};\n        user.name = values.name;\n        user.email = values.email;\n        user.photoURL = resp.user.photoURL;\n        user.userName = values.userName;\n        docRef.set(user);\n        dispatch({ type: \"SIGNUP\", payload: user });\n      })\n      .catch((e) => {\n        dispatch({ type: \"SET_ERROR\", payload: e.message });\n        setTimeout(() => {\n          dispatch({ type: \"REMOVE_ERROR\" });\n        }, 2000);\n      });\n  };\n\n  const login = async (values) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(values.email, values.password)\n      .then(async (resp) => {\n        const docRef = firebase.firestore().doc(`/users/${values.email}`);\n        docRef.get().then((data) => {\n          dispatch({ type: \"SIGNUP\", payload: data.data() });\n        });\n      })\n      .catch((e) => {\n        dispatch({ type: \"SET_ERROR\", payload: e.message });\n        setTimeout(() => {\n          dispatch({ type: \"REMOVE_ERROR\" });\n        }, 2000);\n      });\n  };\n\n  const facebookSignup = ({ name, email, photoURL }) => {\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .where(\"email\", \"==\", email)\n      .limit(1)\n      .get()\n      .then((data) => {\n        if (data.docs.length) {\n          let user = {};\n          user.name = name;\n          user.email = email;\n          user.photoURL = photoURL;\n          dispatch({ type: \"SIGNUP\", payload: data.docs[0].data() });\n        } else {\n          const docRef = firebase.firestore().doc(`/users/${email}`);\n          let user = {};\n          user.name = name;\n          user.email = email;\n          user.photoURL = photoURL;\n          user.userName = nanoid(10);\n          docRef.set(user);\n          dispatch({ type: \"SIGNUP\", payload: user });\n        }\n      });\n  };\n\n  const updateProfile = async (values) => {\n    if (values.file) {\n      var metadata = {\n        contentType: values.file.type,\n      };\n      const filePath = `users/${state.user.email}/profile-image`;\n      const fileRef = firebase.storage().ref().child(filePath);\n      const uploadTask = fileRef.put(values.file, metadata);\n      uploadTask.on(\"state_changed\", console.log, console.error, () => {\n        firebase\n          .storage()\n          .ref()\n          .child(filePath)\n          .getDownloadURL()\n          .then((url) => {\n            let b, x;\n            if (values.bio) b = values.bio;\n            else b = \"\";\n            if (values.website) x = values.website;\n            else x = \"\";\n\n            firebase\n              .firestore()\n              .collection(\"users\")\n              .doc(values.email)\n              .update({\n                name: values.name,\n                userName: values.username,\n                bio: b,\n                photoURL: url,\n                website: x,\n              })\n              .then(() => {\n                dispatch({ type: \"UPDATE_TRUE\" });\n                setTimeout(() => {\n                  dispatch({ type: \"UPDATE_FALSE\" });\n                }, 2000);\n              });\n          });\n      });\n    } else {\n      let b, x;\n      if (values.bio) b = values.bio;\n      else b = \"\";\n      if (values.website) x = values.website;\n      else x = \"\";\n\n      firebase\n        .firestore()\n        .collection(\"users\")\n        .doc(values.email)\n        .update({\n          name: values.name,\n          userName: values.username,\n          bio: b,\n          website: x,\n        })\n        .then(() => {\n          dispatch({ type: \"UPDATE_TRUE\" });\n          setTimeout(() => {\n            dispatch({ type: \"UPDATE_FALSE\" });\n          }, 2000);\n        });\n    }\n  };\n\n  const uploadPost = (file, caption) => {\n    let id = nanoid(15);\n    var metadata = {\n      contentType: file.type,\n    };\n    const filePath = `posts/${id}`;\n    const fileRef = firebase.storage().ref().child(filePath);\n    const uploadTask = fileRef.put(file, metadata);\n    uploadTask.on(\"state_changed\", console.log, console.error, () => {\n      firebase\n        .storage()\n        .ref()\n        .child(filePath)\n        .getDownloadURL()\n        .then((url) => {\n          let post = {};\n          post.id = id;\n          post.email = state.user.email;\n          post.url = url;\n          if (caption) post.caption = caption;\n          post.timestamp = firebase.firestore.FieldValue.serverTimestamp();\n          firebase\n            .firestore()\n            .collection(\"posts\")\n            .doc(id)\n            .set(post)\n            .then(() => {\n              dispatch({ type: \"POSTED\" });\n              setTimeout(() => {\n                dispatch({ type: \"REMOVE_POSTED\" });\n              }, 2000);\n            });\n        });\n    });\n  };\n\n  return (\n    <FirebaseContext.Provider\n      value={{\n        user: state.user,\n        loading: state.loading,\n        signup: signup,\n        facebookSignup: facebookSignup,\n        login: login,\n        error: state.error,\n        updateProfile,\n        uploadPost,\n        posted: state.posted,\n        update: state.update,\n      }}\n    >\n      {\" \"}\n      {props.children}{\" \"}\n    </FirebaseContext.Provider>\n  );\n};\n\nexport default FireState;\n","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\Context\\Firebase\\FirebaseContext.js",["220"],"import React, { createContext } from \"react\";\nconst FirebaseContext = createContext();\nexport default FirebaseContext;","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Loader.js",[],"C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Posts.js",["221","222","223","224","225","226","227"],"import React, { useEffect, useState, useContext } from \"react\";\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\nimport firebase from \"firebase/app\";\nimport Heart from \"../icons/heart.svg\";\nimport Upload from \"../icons/upload.svg\";\nimport { Link } from \"react-router-dom\";\nimport { Spin } from \"antd\";\nimport Loader from \"./Loader\";\nconst Posts = (props) => {\n  const { user, updateProfile, posted } = useContext(FirebaseContext);\n  const [loading, setLoading] = useState(true);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    if (props.userName) {\n      if (posts) {\n        if (posted) {\n          let x = [];\n          setLoading(true);\n          firebase\n            .firestore()\n            .collection(\"users\")\n            .where(\"userName\", \"==\", props.userName)\n            .get()\n            .then((u) => {\n              firebase\n                .firestore()\n                .collection(\"posts\")\n                .where(\"email\", \"==\", u.docs[0].data().email)\n                .orderBy(\"timestamp\", \"desc\")\n                .get()\n                .then((data) => {\n                  data.docs.forEach((post) => {\n                    x.push(post.data());\n                  });\n                  setPosts(x);\n                  setLoading(false);\n                });\n            });\n        } else {\n          let x = [];\n          setLoading(true);\n          firebase\n            .firestore()\n            .collection(\"users\")\n            .where(\"userName\", \"==\", props.userName)\n            .get()\n            .then((u) => {\n              firebase\n                .firestore()\n                .collection(\"posts\")\n\n                .where(\"email\", \"==\", u.docs[0].data().email)\n                .orderBy(\"timestamp\", \"desc\")\n                .get()\n                .then((data) => {\n                  data.docs.forEach((post) => {\n                    x.push(post.data());\n                  });\n                  setPosts(x);\n                  setLoading(false);\n                });\n            });\n        }\n      }\n    }\n    setLoading(false);\n  }, [posted]);\n\n  return (\n    <div>\n      {loading ? (\n        <Spin className=\"spin_loader\" />\n      ) : posts.length ? (\n        <div className=\"grid_posts\">\n          {posts.map((post) => (\n            <Link to={`/posts/${post.id}`}>\n              <div className=\"image_1\">\n                <img src={post.url} className=\"image_post\" />\n                <div className=\"middle1\">\n                  <div className=\"text1\">\n                    {!post.likes ? (\n                      <span>\n                        0{\" \"}\n                        <i\n                          class=\"fa fa-heart\"\n                          aria-hidden=\"true\"\n                          style={{ color: \"white\" }}\n                        ></i>\n                      </span>\n                    ) : (\n                      <span>\n                        {post.likes.length}{\" \"}\n                        <i\n                          class=\"fa fa-heart\"\n                          aria-hidden=\"true\"\n                          style={{ color: \"white\" }}\n                        ></i>\n                      </span>\n                    )}\n                    &nbsp;&nbsp;\n                    {!post.comments ? (\n                      <span>\n                        0{\" \"}\n                        <i\n                          class=\"fa fa-comment\"\n                          aria-hidden=\"true\"\n                          style={{ color: \"white\" }}\n                        ></i>\n                      </span>\n                    ) : (\n                      <span>\n                        {post.comments.length}{\" \"}\n                        <i\n                          class=\"fa fa-comment\"\n                          aria-hidden=\"true\"\n                          style={{ color: \"white\" }}\n                        />\n                      </span>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </Link>\n          ))}\n        </div>\n      ) : (\n        <img src={Upload} className=\"no_post\" />\n      )}\n    </div>\n  );\n};\n\nexport default Posts;\n","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\Saved.js",["228","229","230","231","232","233"],"import React, { useEffect, useState, useContext } from \"react\";\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\nimport firebase from \"firebase/app\";\nimport Heart from \"../icons/heart.svg\";\nimport Upload from \"../icons/upload.svg\";\nimport { Link } from \"react-router-dom\";\nimport { Spin } from \"antd\";\nimport Loader from \"./Loader\";\nconst Saved = (props) => {\n  const { user, updateProfile } = useContext(FirebaseContext);\n  const [loading, setLoading] = useState(true);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    let x = [];\n    let y = [];\n    setLoading(true);\n\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(user.email)\n      .get()\n      .then((data) => {\n        if (data.data().bookmarks) {\n          data.data().bookmarks.forEach((post) => {\n            x.push(post);\n          });\n          if (x.length) {\n            firebase\n              .firestore()\n              .collection(\"posts\")\n              .where(\"id\", \"in\", x)\n              .get()\n              .then((data) => {\n                data.docs.forEach((d) => {\n                  y.push(d.data());\n                });\n                setPosts(y);\n              });\n          }\n        } else {\n          setPosts(y);\n        }\n\n        setLoading(false);\n      });\n  }, []);\n  return (\n    <div>\n      {loading ? (\n        <Spin className=\"spin_loader\" />\n      ) : posts.length ? (\n        <div className=\"grid_posts\">\n          {posts.map((post) => (\n            <Link to={`/posts/${post.id}`}>\n              <div className=\"image_1\">\n                <img src={post.url} className=\"image_post\" />\n                <div className=\"middle1\">\n                  <div className=\"text1\">\n                    {!post.likes ? (\n                      <span>\n                        0 <i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i>\n                      </span>\n                    ) : (\n                      <span>\n                        {post.likes.length}{\" \"}\n                        <i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i>\n                      </span>\n                    )}\n                    &nbsp;&nbsp;\n                    {!post.comments ? (\n                      <span>\n                        0 <i class=\"fa fa-comment-o\" aria-hidden=\"true\"></i>\n                      </span>\n                    ) : (\n                      <span>\n                        {post.comments.length}{\" \"}\n                        <i class=\"fa fa-comment-o\" aria-hidden=\"true\" />\n                      </span>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </Link>\n          ))}\n        </div>\n      ) : (\n        <img src={Upload} className=\"no_post\" />\n      )}\n    </div>\n  );\n};\n\nexport default Saved;\n","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\components\\FeedPost.js",["234","235","236","237","238","239","240","241","242","243","244","245","246"],"import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport firebase from \"firebase/app\";\nimport Loader from \"./Loader\";\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { Popconfirm } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\nimport UserImage from \"../images/user.svg\";\n\nconst FeedPost = (props) => {\n  const [post, setPost] = useState(null);\n  const [owner, setOwner] = useState(null);\n  const [heart, setHeart] = useState(false);\n  const myRef = useRef(null);\n\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const [latestComments, setLatest] = useState([]);\n  let l;\n\n  const handleConfirm = () => {\n    var postRef = firebase.storage().ref().child(`/posts/${post.id}`);\n    postRef\n      .delete()\n      .then(function () {\n        firebase\n          .firestore()\n          .doc(`/posts/${post.id}`)\n          .delete()\n          .then(() => {\n            props.history.push(\"/\");\n          });\n      })\n      .catch(function (error) {\n        // Uh-oh, an error occurred!\n      });\n  };\n  const { user, updateProfile } = useContext(FirebaseContext);\n\n  const compare = (a, b) => {\n    return a.time < b.time;\n  };\n\n  useEffect(() => {\n    firebase\n      .firestore()\n      .doc(`/posts/${props.id}`)\n      .get()\n      .then((data) => {\n        if (!data.exists) {\n          props.history.push(\"/\");\n        } else {\n          if (data.data().comments) {\n            let x = data.data().comments;\n            x.sort(compare);\n\n            let newComments = [];\n            let resol = [];\n            for (let i = 0; i < x.length; i++) {\n              resol.push(\n                firebase\n                  .firestore()\n                  .doc(`/users/${x[i].email}`)\n                  .get()\n                  .then((u) => {\n                    let p = {};\n                    p = {\n                      ...x[i],\n                      userName: u.data().userName,\n                      photoURL: u.data().photoURL,\n                    };\n                    return p;\n                  })\n              );\n            }\n            Promise.all(resol).then((ans) => {\n              setComments([...ans]);\n            });\n\n            let count = 0;\n            var newArr = [];\n\n            for (let i = x.length - 1; i >= 0; i--) {\n              if (count == 2) break;\n              firebase\n                .firestore()\n                .doc(`/users/${x[i].email}`)\n                .get()\n                .then((u) => {\n                  let temp = {};\n                  temp.comment = x[i].comment;\n                  temp.time = x[i].comment;\n                  temp.userName = u.data().userName;\n                  temp.photoURL = u.data().photoURL;\n                  newArr.push(temp);\n                });\n              count += 1;\n            }\n            setLatest(newArr);\n          }\n          setPost(data.data());\n\n          firebase\n            .firestore()\n            .doc(`/users/${data.data().email}`)\n            .get()\n            .then((u) => {\n              setOwner(u.data());\n            });\n        }\n      });\n  }, []);\n\n  const reload = () => {\n    firebase\n      .firestore()\n      .doc(`/posts/${post.id}`)\n      .get()\n      .then((data) => {\n        if (!data.exists) {\n          props.history.push(\"/\");\n        } else {\n          if (data.data().comments) {\n            let x = data.data().comments;\n            x.sort(compare);\n\n            let newComments = [];\n            let resol = [];\n            for (let i = 0; i < x.length; i++) {\n              resol.push(\n                firebase\n                  .firestore()\n                  .doc(`/users/${x[i].email}`)\n                  .get()\n                  .then((u) => {\n                    let p = {};\n                    p = {\n                      ...x[i],\n                      userName: u.data().userName,\n                      photoURL: u.data().photoURL,\n                    };\n                    return p;\n                  })\n              );\n            }\n            Promise.all(resol).then((ans) => {\n              setComments([...ans]);\n            });\n\n            let count = 0;\n            var newArr = [];\n\n            for (let i = x.length - 1; i >= 0; i--) {\n              if (count == 2) break;\n              firebase\n                .firestore()\n                .doc(`/users/${x[i].email}`)\n                .get()\n                .then((u) => {\n                  let temp = {};\n                  temp.comment = x[i].comment;\n                  temp.time = x[i].comment;\n                  temp.userName = u.data().userName;\n                  temp.photoURL = u.data().photoURL;\n                  newArr.push(temp);\n                });\n              count += 1;\n            }\n            setLatest(newArr);\n          }\n          setPost(data.data());\n          if (myRef && myRef.current)\n            myRef.current.scrollIntoView({ behavior: \"smooth\" });\n\n          firebase\n            .firestore()\n            .doc(`/users/${data.data().email}`)\n            .get()\n            .then((u) => {\n              setOwner(u.data());\n            });\n        }\n      });\n    if (myRef && myRef.current)\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\n    setComment(\"\");\n  };\n\n  const handleDBClick = () => {\n    setHeart(true);\n    setTimeout(() => {\n      setHeart(false);\n    }, 800);\n    if (post.likes) {\n      if (!post.likes.includes(user.email)) {\n        firebase\n          .firestore()\n          .doc(`/posts/${post.id}`)\n          .get()\n\n          .then((data) => {\n            l = data.data().likes;\n            l.push(user.email);\n            firebase.firestore().doc(`/posts/${post.id}`).update({\n              likes: l,\n            });\n          })\n          .then(() => {\n            setPost({ ...post, likes: l });\n          });\n      }\n    } else {\n      firebase\n        .firestore()\n        .doc(`/posts/${post.id}`)\n        .get()\n        .then((data) => {\n          if (data.data().likes) l = data.data().likes;\n          else l = [];\n          l.push(user.email);\n          firebase.firestore().doc(`/posts/${post.id}`).update({\n            likes: l,\n          });\n        })\n        .then(() => {\n          setPost({ ...post, likes: l });\n        });\n    }\n  };\n\n  const handleLike = () => {\n    if (post.likes) {\n      if (!post.likes.includes(user.email)) {\n        firebase\n          .firestore()\n          .doc(`/posts/${post.id}`)\n          .get()\n\n          .then((data) => {\n            l = data.data().likes;\n            l.push(user.email);\n            firebase.firestore().doc(`/posts/${post.id}`).update({\n              likes: l,\n            });\n          })\n          .then(() => {\n            setPost({ ...post, likes: l });\n          });\n      } else {\n        firebase\n          .firestore()\n          .doc(`/posts/${post.id}`)\n          .get()\n          .then((data) => {\n            l = data.data().likes;\n            l = l.filter((like) => like !== user.email);\n            firebase.firestore().doc(`/posts/${post.id}`).update({\n              likes: l,\n            });\n          })\n          .then(() => {\n            setPost({ ...post, likes: l });\n          });\n      }\n    } else {\n      firebase\n        .firestore()\n        .doc(`/posts/${post.id}`)\n        .get()\n        .then((data) => {\n          if (data.data().likes) l = data.data().likes;\n          else l = [];\n          l.push(user.email);\n          firebase.firestore().doc(`/posts/${post.id}`).update({\n            likes: l,\n          });\n        })\n        .then(() => {\n          setPost({ ...post, likes: l });\n        });\n    }\n  };\n\n  const handleBookmark = () => {\n    console.log(user);\n    if (user.bookmarks) {\n      if (!user.bookmarks.includes(post.id)) {\n        let bookmarks = user.bookmarks;\n        bookmarks.push(post.id);\n        firebase\n          .firestore()\n          .doc(`/users/${user.email}`)\n          .update({\n            bookmarks,\n          })\n          .then(() => {});\n      } else {\n        let bookmarks = user.bookmarks;\n        bookmarks = bookmarks.filter((like) => like !== post.id);\n        firebase\n          .firestore()\n          .doc(`/users/${user.email}`)\n          .update({\n            bookmarks,\n          })\n          .then(() => {});\n      }\n    } else {\n      let bookmarks = [];\n      bookmarks.push(post.id);\n      firebase\n        .firestore()\n        .doc(`/users/${user.email}`)\n        .update({\n          bookmarks,\n        })\n        .then(() => {});\n    }\n  };\n\n  const handleComment = (e) => {\n    e.preventDefault();\n    if (comment.length) {\n      let newComment = {};\n      newComment.time = Date.now();\n      newComment.comment = comment;\n      newComment.email = user.email;\n      firebase\n        .firestore()\n        .doc(`/posts/${post.id}`)\n        .get()\n        .then((data) => {\n          if (data.data().comments) {\n            let comments = data.data().comments;\n            comments.push(newComment);\n            firebase\n              .firestore()\n              .doc(`/posts/${post.id}`)\n              .update({ comments })\n              .then(() => {\n                reload();\n              });\n          } else {\n            let comments = [];\n            comments.push(newComment);\n            firebase\n              .firestore()\n              .doc(`/posts/${post.id}`)\n              .update({ comments })\n              .then(() => {\n                reload();\n              });\n          }\n        });\n    }\n    if (myRef && myRef.current)\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\n    setComment(\"\");\n  };\n\n  useEffect(() => {\n    if (myRef && myRef.current)\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\n  }, [comments]);\n\n  return (\n    <div>\n      {!post || !owner ? (\n        <Loader />\n      ) : (\n        <div className=\"post_grid1\">\n          <div className=\"post_photo_grid1\">\n            <div className=\"post_info_grid\">\n              {owner.photoURL ? (\n                <img src={owner.photoURL} className=\"image_circle\" />\n              ) : (\n                <img src={UserImage} className=\"image_circle\" />\n              )}\n              <div>\n                <Link to={`/${owner.userName}`} style={{ color: \"black\" }}>\n                  {owner.userName}\n                </Link>\n              </div>\n              {(user.email === post.email ||\n                user.email == \"mihir0699@gmail.com\") && (\n                <Popconfirm\n                  placement=\"top\"\n                  title=\"Delete this post?\"\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                  onConfirm={handleConfirm}\n                >\n                  <EllipsisOutlined\n                    style={{ fontSize: \"1.5rem\", marginRight: \"0.5rem\" }}\n                    className=\"delete_post\"\n                  />\n                </Popconfirm>\n              )}\n            </div>\n            <div className=\"inner_div1\">\n              <img\n                src={post.url}\n                loading=\"lazy\"\n                className=\"post_image1\"\n                onDoubleClick={handleDBClick}\n              />\n              {heart && <i className=\"fa fa-heart\" aria-hidden=\"true\" />}\n            </div>\n          </div>\n          <div className=\"bio_grid1\">\n            {owner.photoURL ? (\n              <img src={owner.photoURL} className=\"image_circle1\" />\n            ) : (\n              <img src={UserImage} className=\"image_circle1\" />\n            )}\n            <div>\n              <Link to={`/${owner.userName}`} style={{ color: \"black\" }}>\n                {\" \"}\n                <span className=\"post_userName\">{owner.userName}</span>{\" \"}\n              </Link>{\" \"}\n              {post.caption}\n            </div>\n          </div>\n          <div className=\"comments_grid1\">\n            <div className=\"grid_c_div1\">\n              {comments.length ? (\n                <>\n                  {comments.map((c) => (\n                    <div className=\"comment_grid\">\n                      <img src={c.photoURL} className=\"comment_img\" />\n                      <div>\n                        {\" \"}\n                        <span className=\"post_userName\">\n                          <Link\n                            href={`/${c.userName}`}\n                            style={{ color: \"black\" }}\n                          >\n                            {c.userName}\n                          </Link>\n                        </span>\n                        <span>{c.comment}</span>\n                      </div>\n                    </div>\n                  ))}\n                  <div ref={myRef}></div>\n                </>\n              ) : null}\n            </div>\n          </div>\n          {comments.length ? (\n            <div className=\"mobile_comments1\">\n              <span className=\"view_comments\">\n                View all {comments.length} comments\n              </span>\n              {latestComments.length\n                ? latestComments.map((com) => (\n                    <div>\n                      <span className=\"post_userName\">\n                        <Link\n                          to={`/${com.userName}`}\n                          style={{ color: \"black\" }}\n                        >\n                          {com.userName}\n                        </Link>\n                      </span>\n                      &nbsp;\n                      {com.comment}\n                    </div>\n                  ))\n                : null}\n            </div>\n          ) : null}\n\n          <div className=\"compo_grid1\">\n            <div className=\"heart_grid\">\n              <div>\n                <i\n                  class={`${\n                    !post.likes\n                      ? `fa fa-heart-o`\n                      : post.likes.includes(user.email)\n                      ? `fa fa-heart`\n                      : `fa fa-heart-o`\n                  }`}\n                  aria-hidden=\"true\"\n                  onClick={handleLike}\n                />\n                <i class=\"fa fa-comment-o\" aria-hidden=\"true\"></i>\n                <i class=\"fa fa-share\" aria-hidden=\"true\"></i>\n              </div>\n              <i\n                className={`${\n                  !user.bookmarks\n                    ? `fa fa-bookmark-o bookmark`\n                    : user.bookmarks.includes(post.id)\n                    ? `fa fa-bookmark bookmark`\n                    : `fa fa-bookmark-o bookmark`\n                }`}\n                aria-hidden=\"true\"\n                onClick={handleBookmark}\n                style={{ marginRight: \"0.5rem\" }}\n              ></i>\n            </div>\n            <div className=\"separate\">\n              {post.likes ? (\n                <span className=\"likes_div\">{post.likes.length} likes</span>\n              ) : (\n                <span className=\"likes_div\">0 likes</span>\n              )}\n            </div>\n          </div>\n          <div className=\"hidden_input1\">\n            <div className=\"text_input_post2\">\n              <form onSubmit={handleComment}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Add a comment\"\n                  onChange={(e) => setComment(e.target.value)}\n                  value={comment}\n                />\n                <button\n                  className=\"post_comment\"\n                  type=\"submit\"\n                  disabled={comment.length ? undefined : \"disabled\"}\n                >\n                  Post\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FeedPost;\n","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\Context\\Firebase\\FireReducer.js",["247","248","249"],"import { act } from \"react-dom/test-utils\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case \"USER_LOADED\":\n      let isAuth = false;\n      if (action.payload) isAuth = true;\n      return {\n        ...state,\n        isAuthenticated: isAuth,\n        loading: false,\n        user: action.payload,\n      };\n    case \"SIGNUP\":\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload,\n      };\n    case \"SET_ERROR\":\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case \"REMOVE_ERROR\":\n      return {\n        ...state,\n        error: null,\n      };\n    case \"POSTED\":\n      return {\n        ...state,\n        posted: true,\n      };\n    case \"REMOVE_POSTED\": {\n      return {\n        ...state,\n        posted: false,\n      };\n    }\n    case \"UPDATE_TRUE\": {\n      return {\n        ...state,\n        update: true,\n      };\n    }\n    case \"UPDATE_FALSE\": {\n      return {\n        ...state,\n        update: false,\n      };\n    }\n  }\n};\n","C:\\Users\\user\\Desktop\\Instagram-Clone-master\\src\\firebase\\config.js",["250"],{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":6,"column":25,"nodeType":"257","messageId":"258","endLine":6,"endColumn":34},{"ruleId":"255","severity":1,"message":"259","line":2,"column":31,"nodeType":"257","messageId":"258","endLine":2,"endColumn":39},{"ruleId":"255","severity":1,"message":"260","line":4,"column":3,"nodeType":"257","messageId":"258","endLine":4,"endColumn":15},{"ruleId":"255","severity":1,"message":"261","line":12,"column":10,"nodeType":"257","messageId":"258","endLine":12,"endColumn":14},{"ruleId":"255","severity":1,"message":"262","line":15,"column":10,"nodeType":"257","messageId":"258","endLine":15,"endColumn":23},{"ruleId":"263","severity":1,"message":"264","line":36,"column":6,"nodeType":"265","endLine":36,"endColumn":13,"suggestions":"266"},{"ruleId":"263","severity":1,"message":"267","line":40,"column":6,"nodeType":"265","endLine":40,"endColumn":12,"suggestions":"268"},{"ruleId":"255","severity":1,"message":"269","line":96,"column":13,"nodeType":"257","messageId":"258","endLine":96,"endColumn":24},{"ruleId":"255","severity":1,"message":"270","line":102,"column":13,"nodeType":"257","messageId":"258","endLine":102,"endColumn":22},{"ruleId":"255","severity":1,"message":"271","line":103,"column":13,"nodeType":"257","messageId":"258","endLine":103,"endColumn":25},{"ruleId":"255","severity":1,"message":"272","line":105,"column":13,"nodeType":"257","messageId":"258","endLine":105,"endColumn":18},{"ruleId":"255","severity":1,"message":"273","line":107,"column":13,"nodeType":"257","messageId":"258","endLine":107,"endColumn":23},{"ruleId":"274","severity":1,"message":"275","line":124,"column":13,"nodeType":"276","endLine":124,"endColumn":61},{"ruleId":"255","severity":1,"message":"277","line":11,"column":26,"nodeType":"257","messageId":"258","endLine":11,"endColumn":39},{"ruleId":"255","severity":1,"message":"278","line":12,"column":19,"nodeType":"257","messageId":"258","endLine":12,"endColumn":23},{"ruleId":"255","severity":1,"message":"262","line":13,"column":10,"nodeType":"257","messageId":"258","endLine":13,"endColumn":23},{"ruleId":"255","severity":1,"message":"279","line":18,"column":5,"nodeType":"257","messageId":"258","endLine":18,"endColumn":18},{"ruleId":"263","severity":1,"message":"264","line":46,"column":6,"nodeType":"265","endLine":46,"endColumn":14,"suggestions":"280"},{"ruleId":"263","severity":1,"message":"264","line":78,"column":6,"nodeType":"265","endLine":78,"endColumn":14,"suggestions":"281"},{"ruleId":"255","severity":1,"message":"282","line":94,"column":9,"nodeType":"257","messageId":"258","endLine":94,"endColumn":17},{"ruleId":"283","severity":1,"message":"284","line":130,"column":24,"nodeType":"285","messageId":"286","endLine":130,"endColumn":26},{"ruleId":"274","severity":1,"message":"275","line":146,"column":15,"nodeType":"276","endLine":146,"endColumn":56},{"ruleId":"274","severity":1,"message":"275","line":163,"column":25,"nodeType":"276","endLine":163,"endColumn":75},{"ruleId":"274","severity":1,"message":"275","line":165,"column":25,"nodeType":"276","endLine":165,"endColumn":71},{"ruleId":"274","severity":1,"message":"275","line":180,"column":17,"nodeType":"276","endLine":180,"endColumn":35},{"ruleId":"274","severity":1,"message":"275","line":185,"column":17,"nodeType":"276","endLine":185,"endColumn":66},{"ruleId":"274","severity":1,"message":"275","line":189,"column":15,"nodeType":"276","endLine":193,"endColumn":17},{"ruleId":"274","severity":1,"message":"275","line":199,"column":19,"nodeType":"276","endLine":199,"endColumn":70},{"ruleId":"274","severity":1,"message":"275","line":201,"column":19,"nodeType":"276","endLine":201,"endColumn":66},{"ruleId":"274","severity":1,"message":"275","line":206,"column":15,"nodeType":"276","endLine":206,"endColumn":58},{"ruleId":"255","severity":1,"message":"278","line":3,"column":10,"nodeType":"257","messageId":"258","endLine":3,"endColumn":14},{"ruleId":"255","severity":1,"message":"287","line":3,"column":27,"nodeType":"257","messageId":"258","endLine":3,"endColumn":35},{"ruleId":"255","severity":1,"message":"288","line":6,"column":38,"nodeType":"257","messageId":"258","endLine":6,"endColumn":44},{"ruleId":"255","severity":1,"message":"262","line":11,"column":10,"nodeType":"257","messageId":"258","endLine":11,"endColumn":23},{"ruleId":"255","severity":1,"message":"289","line":13,"column":3,"nodeType":"257","messageId":"258","endLine":13,"endColumn":17},{"ruleId":"255","severity":1,"message":"290","line":14,"column":3,"nodeType":"257","messageId":"258","endLine":14,"endColumn":16},{"ruleId":"255","severity":1,"message":"291","line":15,"column":3,"nodeType":"257","messageId":"258","endLine":15,"endColumn":18},{"ruleId":"255","severity":1,"message":"292","line":21,"column":8,"nodeType":"257","messageId":"258","endLine":21,"endColumn":12},{"ruleId":"255","severity":1,"message":"293","line":24,"column":11,"nodeType":"257","messageId":"258","endLine":24,"endColumn":19},{"ruleId":"255","severity":1,"message":"294","line":26,"column":32,"nodeType":"257","messageId":"258","endLine":26,"endColumn":38},{"ruleId":"255","severity":1,"message":"295","line":35,"column":9,"nodeType":"257","messageId":"258","endLine":35,"endColumn":12},{"ruleId":"255","severity":1,"message":"296","line":41,"column":10,"nodeType":"257","messageId":"258","endLine":41,"endColumn":17},{"ruleId":"263","severity":1,"message":"297","line":62,"column":6,"nodeType":"265","endLine":62,"endColumn":8,"suggestions":"298"},{"ruleId":"255","severity":1,"message":"299","line":178,"column":26,"nodeType":"257","messageId":"258","endLine":178,"endColumn":43},{"ruleId":"283","severity":1,"message":"300","line":188,"column":62,"nodeType":"285","messageId":"286","endLine":188,"endColumn":64},{"ruleId":"283","severity":1,"message":"284","line":297,"column":22,"nodeType":"285","messageId":"286","endLine":297,"endColumn":24},{"ruleId":"283","severity":1,"message":"284","line":308,"column":26,"nodeType":"285","messageId":"286","endLine":308,"endColumn":28},{"ruleId":"283","severity":1,"message":"284","line":318,"column":22,"nodeType":"285","messageId":"286","endLine":318,"endColumn":24},{"ruleId":"283","severity":1,"message":"284","line":335,"column":30,"nodeType":"285","messageId":"286","endLine":335,"endColumn":32},{"ruleId":"255","severity":1,"message":"301","line":355,"column":9,"nodeType":"257","messageId":"258","endLine":355,"endColumn":25},{"ruleId":"274","severity":1,"message":"275","line":381,"column":25,"nodeType":"276","endLine":381,"endColumn":56},{"ruleId":"274","severity":1,"message":"275","line":383,"column":25,"nodeType":"276","endLine":383,"endColumn":48},{"ruleId":"274","severity":1,"message":"275","line":433,"column":25,"nodeType":"276","endLine":433,"endColumn":56},{"ruleId":"274","severity":1,"message":"275","line":435,"column":25,"nodeType":"276","endLine":435,"endColumn":48},{"ruleId":"274","severity":1,"message":"275","line":477,"column":19,"nodeType":"276","endLine":477,"endColumn":69},{"ruleId":"274","severity":1,"message":"275","line":479,"column":19,"nodeType":"276","endLine":479,"endColumn":65},{"ruleId":"274","severity":1,"message":"275","line":486,"column":21,"nodeType":"276","endLine":489,"endColumn":23},{"ruleId":"283","severity":1,"message":"284","line":492,"column":36,"nodeType":"285","messageId":"286","endLine":492,"endColumn":38},{"ruleId":"302","severity":1,"message":"303","line":548,"column":23,"nodeType":"276","messageId":"304","endLine":552,"endColumn":24,"fix":"305"},{"ruleId":"274","severity":1,"message":"275","line":569,"column":19,"nodeType":"276","endLine":572,"endColumn":21},{"ruleId":"274","severity":1,"message":"275","line":574,"column":19,"nodeType":"276","endLine":577,"endColumn":21},{"ruleId":"274","severity":1,"message":"275","line":673,"column":21,"nodeType":"276","endLine":677,"endColumn":23},{"ruleId":"274","severity":1,"message":"275","line":689,"column":23,"nodeType":"276","endLine":689,"endColumn":63},{"ruleId":"274","severity":1,"message":"275","line":7,"column":7,"nodeType":"276","endLine":7,"endColumn":55},{"ruleId":"255","severity":1,"message":"259","line":2,"column":31,"nodeType":"257","messageId":"258","endLine":2,"endColumn":39},{"ruleId":"255","severity":1,"message":"261","line":12,"column":10,"nodeType":"257","messageId":"258","endLine":12,"endColumn":14},{"ruleId":"255","severity":1,"message":"306","line":22,"column":10,"nodeType":"257","messageId":"258","endLine":22,"endColumn":18},{"ruleId":"255","severity":1,"message":"307","line":22,"column":20,"nodeType":"257","messageId":"258","endLine":22,"endColumn":31},{"ruleId":"255","severity":1,"message":"308","line":28,"column":5,"nodeType":"257","messageId":"258","endLine":28,"endColumn":20},{"ruleId":"263","severity":1,"message":"267","line":39,"column":6,"nodeType":"265","endLine":39,"endColumn":12,"suggestions":"309"},{"ruleId":"263","severity":1,"message":"264","line":48,"column":6,"nodeType":"265","endLine":48,"endColumn":13,"suggestions":"310"},{"ruleId":"255","severity":1,"message":"269","line":131,"column":13,"nodeType":"257","messageId":"258","endLine":131,"endColumn":24},{"ruleId":"255","severity":1,"message":"270","line":137,"column":13,"nodeType":"257","messageId":"258","endLine":137,"endColumn":22},{"ruleId":"255","severity":1,"message":"271","line":138,"column":13,"nodeType":"257","messageId":"258","endLine":138,"endColumn":25},{"ruleId":"255","severity":1,"message":"272","line":140,"column":13,"nodeType":"257","messageId":"258","endLine":140,"endColumn":18},{"ruleId":"255","severity":1,"message":"273","line":142,"column":13,"nodeType":"257","messageId":"258","endLine":142,"endColumn":23},{"ruleId":"274","severity":1,"message":"275","line":164,"column":15,"nodeType":"276","endLine":164,"endColumn":63},{"ruleId":"255","severity":1,"message":"311","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":13},{"ruleId":"255","severity":1,"message":"278","line":6,"column":10,"nodeType":"257","messageId":"258","endLine":6,"endColumn":14},{"ruleId":"255","severity":1,"message":"312","line":7,"column":10,"nodeType":"257","messageId":"258","endLine":7,"endColumn":14},{"ruleId":"255","severity":1,"message":"313","line":10,"column":11,"nodeType":"257","messageId":"258","endLine":10,"endColumn":15},{"ruleId":"255","severity":1,"message":"279","line":10,"column":17,"nodeType":"257","messageId":"258","endLine":10,"endColumn":30},{"ruleId":"274","severity":1,"message":"275","line":40,"column":17,"nodeType":"276","endLine":40,"endColumn":77},{"ruleId":"274","severity":1,"message":"275","line":89,"column":9,"nodeType":"276","endLine":89,"endColumn":49},{"ruleId":"255","severity":1,"message":"287","line":2,"column":27,"nodeType":"257","messageId":"258","endLine":2,"endColumn":35},{"ruleId":"255","severity":1,"message":"314","line":21,"column":9,"nodeType":"257","messageId":"258","endLine":21,"endColumn":20},{"ruleId":"283","severity":1,"message":"300","line":27,"column":24,"nodeType":"285","messageId":"286","endLine":27,"endColumn":26},{"ruleId":"283","severity":1,"message":"300","line":27,"column":53,"nodeType":"285","messageId":"286","endLine":27,"endColumn":55},{"ruleId":"255","severity":1,"message":"279","line":49,"column":17,"nodeType":"257","messageId":"258","endLine":49,"endColumn":30},{"ruleId":"255","severity":1,"message":"315","line":68,"column":17,"nodeType":"257","messageId":"258","endLine":68,"endColumn":28},{"ruleId":"283","severity":1,"message":"284","line":95,"column":25,"nodeType":"285","messageId":"286","endLine":95,"endColumn":27},{"ruleId":"255","severity":1,"message":"315","line":143,"column":17,"nodeType":"257","messageId":"258","endLine":143,"endColumn":28},{"ruleId":"283","severity":1,"message":"284","line":170,"column":25,"nodeType":"285","messageId":"286","endLine":170,"endColumn":27},{"ruleId":"263","severity":1,"message":"316","line":198,"column":6,"nodeType":"265","endLine":198,"endColumn":8,"suggestions":"317"},{"ruleId":"274","severity":1,"message":"275","line":385,"column":17,"nodeType":"276","endLine":385,"endColumn":70},{"ruleId":"274","severity":1,"message":"275","line":387,"column":17,"nodeType":"276","endLine":387,"endColumn":65},{"ruleId":"283","severity":1,"message":"284","line":395,"column":28,"nodeType":"285","messageId":"286","endLine":395,"endColumn":30},{"ruleId":"274","severity":1,"message":"275","line":411,"column":15,"nodeType":"276","endLine":415,"endColumn":17},{"ruleId":"274","severity":1,"message":"275","line":421,"column":15,"nodeType":"276","endLine":421,"endColumn":69},{"ruleId":"274","severity":1,"message":"275","line":423,"column":15,"nodeType":"276","endLine":423,"endColumn":64},{"ruleId":"274","severity":1,"message":"275","line":440,"column":25,"nodeType":"276","endLine":440,"endColumn":73},{"ruleId":"274","severity":1,"message":"275","line":442,"column":25,"nodeType":"276","endLine":442,"endColumn":72},{"ruleId":"255","severity":1,"message":"279","line":10,"column":17,"nodeType":"257","messageId":"258","endLine":10,"endColumn":30},{"ruleId":"283","severity":1,"message":"284","line":49,"column":22,"nodeType":"285","messageId":"286","endLine":49,"endColumn":24},{"ruleId":"283","severity":1,"message":"284","line":66,"column":30,"nodeType":"285","messageId":"286","endLine":66,"endColumn":32},{"ruleId":"283","severity":1,"message":"300","line":107,"column":34,"nodeType":"285","messageId":"286","endLine":107,"endColumn":36},{"ruleId":"283","severity":1,"message":"300","line":140,"column":34,"nodeType":"285","messageId":"286","endLine":140,"endColumn":36},{"ruleId":"283","severity":1,"message":"300","line":141,"column":34,"nodeType":"285","messageId":"286","endLine":141,"endColumn":36},{"ruleId":"263","severity":1,"message":"318","line":166,"column":6,"nodeType":"265","endLine":166,"endColumn":8,"suggestions":"319"},{"ruleId":"274","severity":1,"message":"275","line":181,"column":17,"nodeType":"276","endLine":181,"endColumn":66},{"ruleId":"274","severity":1,"message":"275","line":183,"column":17,"nodeType":"276","endLine":183,"endColumn":62},{"ruleId":"274","severity":1,"message":"275","line":200,"column":25,"nodeType":"276","endLine":200,"endColumn":71},{"ruleId":"274","severity":1,"message":"275","line":202,"column":25,"nodeType":"276","endLine":202,"endColumn":70},{"ruleId":"274","severity":1,"message":"275","line":238,"column":17,"nodeType":"276","endLine":238,"endColumn":66},{"ruleId":"274","severity":1,"message":"275","line":240,"column":17,"nodeType":"276","endLine":240,"endColumn":62},{"ruleId":"274","severity":1,"message":"275","line":256,"column":23,"nodeType":"276","endLine":256,"endColumn":69},{"ruleId":"274","severity":1,"message":"275","line":258,"column":23,"nodeType":"276","endLine":258,"endColumn":68},{"ruleId":"274","severity":1,"message":"275","line":288,"column":13,"nodeType":"276","endLine":288,"endColumn":58},{"ruleId":"255","severity":1,"message":"320","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":27},{"ruleId":"263","severity":1,"message":"321","line":47,"column":6,"nodeType":"265","endLine":47,"endColumn":8,"suggestions":"322"},{"ruleId":"255","severity":1,"message":"323","line":1,"column":8,"nodeType":"257","messageId":"258","endLine":1,"endColumn":13},{"ruleId":"255","severity":1,"message":"311","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":13},{"ruleId":"255","severity":1,"message":"324","line":8,"column":8,"nodeType":"257","messageId":"258","endLine":8,"endColumn":14},{"ruleId":"255","severity":1,"message":"313","line":10,"column":11,"nodeType":"257","messageId":"258","endLine":10,"endColumn":15},{"ruleId":"255","severity":1,"message":"279","line":10,"column":17,"nodeType":"257","messageId":"258","endLine":10,"endColumn":30},{"ruleId":"263","severity":1,"message":"325","line":67,"column":6,"nodeType":"265","endLine":67,"endColumn":14,"suggestions":"326"},{"ruleId":"274","severity":1,"message":"275","line":78,"column":17,"nodeType":"276","endLine":78,"endColumn":62},{"ruleId":"274","severity":1,"message":"275","line":127,"column":9,"nodeType":"276","endLine":127,"endColumn":49},{"ruleId":"255","severity":1,"message":"311","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":13},{"ruleId":"255","severity":1,"message":"324","line":8,"column":8,"nodeType":"257","messageId":"258","endLine":8,"endColumn":14},{"ruleId":"255","severity":1,"message":"279","line":10,"column":17,"nodeType":"257","messageId":"258","endLine":10,"endColumn":30},{"ruleId":"263","severity":1,"message":"327","line":47,"column":6,"nodeType":"265","endLine":47,"endColumn":8,"suggestions":"328"},{"ruleId":"274","severity":1,"message":"275","line":57,"column":17,"nodeType":"276","endLine":57,"endColumn":62},{"ruleId":"274","severity":1,"message":"275","line":88,"column":9,"nodeType":"276","endLine":88,"endColumn":49},{"ruleId":"255","severity":1,"message":"279","line":38,"column":17,"nodeType":"257","messageId":"258","endLine":38,"endColumn":30},{"ruleId":"255","severity":1,"message":"315","line":57,"column":17,"nodeType":"257","messageId":"258","endLine":57,"endColumn":28},{"ruleId":"283","severity":1,"message":"284","line":84,"column":25,"nodeType":"285","messageId":"286","endLine":84,"endColumn":27},{"ruleId":"263","severity":1,"message":"329","line":112,"column":6,"nodeType":"265","endLine":112,"endColumn":8,"suggestions":"330"},{"ruleId":"255","severity":1,"message":"315","line":127,"column":17,"nodeType":"257","messageId":"258","endLine":127,"endColumn":28},{"ruleId":"283","severity":1,"message":"284","line":154,"column":25,"nodeType":"285","messageId":"286","endLine":154,"endColumn":27},{"ruleId":"274","severity":1,"message":"275","line":375,"column":17,"nodeType":"276","endLine":375,"endColumn":70},{"ruleId":"274","severity":1,"message":"275","line":377,"column":17,"nodeType":"276","endLine":377,"endColumn":65},{"ruleId":"283","severity":1,"message":"284","line":385,"column":28,"nodeType":"285","messageId":"286","endLine":385,"endColumn":30},{"ruleId":"274","severity":1,"message":"275","line":401,"column":15,"nodeType":"276","endLine":406,"endColumn":17},{"ruleId":"274","severity":1,"message":"275","line":412,"column":15,"nodeType":"276","endLine":412,"endColumn":69},{"ruleId":"274","severity":1,"message":"275","line":414,"column":15,"nodeType":"276","endLine":414,"endColumn":64},{"ruleId":"274","severity":1,"message":"275","line":430,"column":23,"nodeType":"276","endLine":430,"endColumn":71},{"ruleId":"255","severity":1,"message":"331","line":1,"column":10,"nodeType":"257","messageId":"258","endLine":1,"endColumn":13},{"ruleId":"332","severity":1,"message":"333","line":3,"column":1,"nodeType":"334","endLine":55,"endColumn":3},{"ruleId":"335","severity":1,"message":"336","line":4,"column":3,"nodeType":"337","messageId":"338","endLine":54,"endColumn":4},{"ruleId":"255","severity":1,"message":"339","line":37,"column":7,"nodeType":"257","messageId":"258","endLine":37,"endColumn":10},"no-native-reassign",["340"],"no-negated-in-lhs",["341"],"no-unused-vars","'useToasts' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'UserOutlined' is defined but never used.","'auth' is defined but never used.","'ToastProvider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addToast'. Either include it or remove the dependency array.","ArrayExpression",["342"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["343"],"'accessToken' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'InboxOutlined' is defined but never used.","'Link' is defined but never used.","'updateProfile' is assigned a value but never used.",["344"],["345"],"'handleOk' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Redirect' is defined but never used.","'Upload' is defined but never used.","'UploadOutlined' is defined but never used.","'AppleOutlined' is defined but never used.","'AndroidOutlined' is defined but never used.","'Post' is defined but never used.","'addToast' is assigned a value but never used.","'update' is assigned a value but never used.","'url' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.history', 'user.following', and 'userName'. Either include them or remove the dependency array.",["346"],"'setConfirmLoading' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'buttonItemLayout' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"347","text":"348"},"'userName' is assigned a value but never used.","'setUserName' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.",["349"],["350"],"'Heart' is defined but never used.","'Spin' is defined but never used.","'user' is assigned a value but never used.","'arraysEqual' is assigned a value but never used.","'newComments' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'postId' and 'props.history'. Either include them or remove the dependency array.",["351"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["352"],"'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'state.user'. Either include it or remove the dependency array.",["353"],"'React' is defined but never used.","'Loader' is defined but never used.","React Hook useEffect has missing dependencies: 'posts' and 'props.userName'. Either include them or remove the dependency array.",["354"],"React Hook useEffect has a missing dependency: 'user.email'. Either include it or remove the dependency array.",["355"],"React Hook useEffect has missing dependencies: 'props.history' and 'props.id'. Either include them or remove the dependency array.",["356"],"'act' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'app' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},[17377,17377]," rel=\"noreferrer\"",{"desc":"359","fix":"367"},{"desc":"357","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},"Update the dependencies array to be: [addToast, error]",{"range":"381","text":"382"},"Update the dependencies array to be: [props.history, user]",{"range":"383","text":"384"},"Update the dependencies array to be: [addToast, update]",{"range":"385","text":"386"},"Update the dependencies array to be: [addToast, posted]",{"range":"387","text":"388"},"Update the dependencies array to be: [props.history, user.following, userName]",{"range":"389","text":"390"},{"range":"391","text":"384"},{"range":"392","text":"382"},"Update the dependencies array to be: [postId, props.history]",{"range":"393","text":"394"},"Update the dependencies array to be: [user]",{"range":"395","text":"396"},"Update the dependencies array to be: [state.user]",{"range":"397","text":"398"},"Update the dependencies array to be: [posted, posts, props.userName]",{"range":"399","text":"400"},"Update the dependencies array to be: [user.email]",{"range":"401","text":"402"},"Update the dependencies array to be: [props.history, props.id]",{"range":"403","text":"404"},[1136,1143],"[addToast, error]",[1227,1233],"[props.history, user]",[1375,1383],"[addToast, update]",[1987,1995],"[addToast, posted]",[2094,2096],"[props.history, user.following, userName]",[1193,1199],[1341,1348],[5697,5699],"[postId, props.history]",[4799,4801],"[user]",[1270,1272],"[state.user]",[2086,2094],"[posted, posts, props.userName]",[1303,1305],"[user.email]",[3201,3203],"[props.history, props.id]"]